;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 9/2/2010 9:04:06 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0004	$	_main:
;servo_16f.c,1 :: 		void main()
;servo_16f.c,3 :: 		TRISB=0X00;
$0004	$1303			BCF	STATUS, RP1
$0005	$1683			BSF	STATUS, RP0
$0006	$0186			CLRF	TRISB, 1
;servo_16f.c,4 :: 		while(1)
$0007	$	L_main_0:
;servo_16f.c,6 :: 		for(i=0;i<100;i++) {
$0007	$1283			BCF	STATUS, RP0
$0008	$01A0			CLRF	main_i_L0
$0009	$01A1			CLRF	main_i_L0+1
$000A	$	L_main_2:
$000A	$3000			MOVLW	0
$000B	$0221			SUBWF	main_i_L0+1, 0
$000C	$1D03			BTFSS	STATUS, Z
$000D	$2810			GOTO	L_main_8
$000E	$3064			MOVLW	100
$000F	$0220			SUBWF	main_i_L0, 0
$0010	$	L_main_8:
$0010	$1803			BTFSC	STATUS, C
$0011	$2836			GOTO	L_main_3
;servo_16f.c,7 :: 		PORTB = 0x80;
$0012	$3080			MOVLW	128
$0013	$0086			MOVWF	PORTB
;servo_16f.c,8 :: 		delay_us(1000);
$0014	$3002			MOVLW	2
$0015	$00FB			MOVWF	STACK_11
$0016	$30FF			MOVLW	255
$0017	$00FA			MOVWF	STACK_10
$0018	$0BFB			DECFSZ	STACK_11, F
$0019	$281B			GOTO	$+2
$001A	$281E			GOTO	$+4
$001B	$0BFA			DECFSZ	STACK_10, F
$001C	$281B			GOTO	$-1
$001D	$2818			GOTO	$-5
$001E	$304A			MOVLW	74
$001F	$00FA			MOVWF	STACK_10
$0020	$0BFA			DECFSZ	STACK_10, F
$0021	$2820			GOTO	$-1
;servo_16f.c,9 :: 		PORTB = 0x00;
$0022	$0186			CLRF	PORTB, 1
;servo_16f.c,10 :: 		delay_us(19000);
$0023	$3019			MOVLW	25
$0024	$00FB			MOVWF	STACK_11
$0025	$30FF			MOVLW	255
$0026	$00FA			MOVWF	STACK_10
$0027	$0BFB			DECFSZ	STACK_11, F
$0028	$282A			GOTO	$+2
$0029	$282D			GOTO	$+4
$002A	$0BFA			DECFSZ	STACK_10, F
$002B	$282A			GOTO	$-1
$002C	$2827			GOTO	$-5
$002D	$309B			MOVLW	155
$002E	$00FA			MOVWF	STACK_10
$002F	$0BFA			DECFSZ	STACK_10, F
$0030	$282F			GOTO	$-1
$0031	$0000			NOP
;servo_16f.c,11 :: 		}
$0032	$	L_main_4:
;servo_16f.c,6 :: 		for(i=0;i<100;i++) {
$0032	$0AA0			INCF	main_i_L0, 1
$0033	$1903			BTFSC	STATUS, Z
$0034	$0AA1			INCF	main_i_L0+1, 1
;servo_16f.c,11 :: 		}
$0035	$280A			GOTO	L_main_2
$0036	$	L_main_3:
;servo_16f.c,12 :: 		for(i=0;i<100;i++) {
$0036	$01A0			CLRF	main_i_L0
$0037	$01A1			CLRF	main_i_L0+1
$0038	$	L_main_5:
$0038	$3000			MOVLW	0
$0039	$0221			SUBWF	main_i_L0+1, 0
$003A	$1D03			BTFSS	STATUS, Z
$003B	$283E			GOTO	L_main_9
$003C	$3064			MOVLW	100
$003D	$0220			SUBWF	main_i_L0, 0
$003E	$	L_main_9:
$003E	$1803			BTFSC	STATUS, C
$003F	$2864			GOTO	L_main_6
;servo_16f.c,13 :: 		PORTB = 0x80;
$0040	$3080			MOVLW	128
$0041	$0086			MOVWF	PORTB
;servo_16f.c,14 :: 		delay_us(2000);
$0042	$3003			MOVLW	3
$0043	$00FB			MOVWF	STACK_11
$0044	$30FF			MOVLW	255
$0045	$00FA			MOVWF	STACK_10
$0046	$0BFB			DECFSZ	STACK_11, F
$0047	$2849			GOTO	$+2
$0048	$284C			GOTO	$+4
$0049	$0BFA			DECFSZ	STACK_10, F
$004A	$2849			GOTO	$-1
$004B	$2846			GOTO	$-5
$004C	$3096			MOVLW	150
$004D	$00FA			MOVWF	STACK_10
$004E	$0BFA			DECFSZ	STACK_10, F
$004F	$284E			GOTO	$-1
;servo_16f.c,15 :: 		PORTB = 0x00;
$0050	$0186			CLRF	PORTB, 1
;servo_16f.c,16 :: 		delay_us(18000);
$0051	$3018			MOVLW	24
$0052	$00FB			MOVWF	STACK_11
$0053	$30FF			MOVLW	255
$0054	$00FA			MOVWF	STACK_10
$0055	$0BFB			DECFSZ	STACK_11, F
$0056	$2858			GOTO	$+2
$0057	$285B			GOTO	$+4
$0058	$0BFA			DECFSZ	STACK_10, F
$0059	$2858			GOTO	$-1
$005A	$2855			GOTO	$-5
$005B	$304F			MOVLW	79
$005C	$00FA			MOVWF	STACK_10
$005D	$0BFA			DECFSZ	STACK_10, F
$005E	$285D			GOTO	$-1
$005F	$0000			NOP
;servo_16f.c,17 :: 		}
$0060	$	L_main_7:
;servo_16f.c,12 :: 		for(i=0;i<100;i++) {
$0060	$0AA0			INCF	main_i_L0, 1
$0061	$1903			BTFSC	STATUS, Z
$0062	$0AA1			INCF	main_i_L0+1, 1
;servo_16f.c,17 :: 		}
$0063	$2838			GOTO	L_main_5
$0064	$	L_main_6:
;servo_16f.c,18 :: 		}
$0064	$2807			GOTO	L_main_0
;servo_16f.c,19 :: 		}
$0065	$2865			GOTO	$
