;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 4/22/2012 6:50:22 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2AC1			GOTO	_main
$0462	$	_RES032:
$0462	$1303			BCF	STATUS, RP1
$0463	$1283			BCF	STATUS, RP0
$0464	$01F2			CLRF	STACK_2
$0465	$01F1			CLRF	STACK_1
$0466	$01F0			CLRF	STACK_0
$0467	$01F8			CLRF	STACK_8
$0468	$01F3			CLRF	STACK_3
$0469	$3000			MOVLW	0
$046A	$0008			RETURN
$0449	$	_SETFUN32:
$0449	$1303			BCF	STATUS, RP1
$044A	$1283			BCF	STATUS, RP0
$044B	$157B			BSF	STACK_11, 2
$044C	$1FFB			BTFSS	STACK_11, 7
$044D	$2C55			GOTO	SETFUN32EEE
$044E	$3001			MOVLW	0x01
$044F	$00F3			MOVWF	STACK_3
$0450	$01F2			CLRF	STACK_2
$0451	$01F1			CLRF	STACK_1
$0452	$01F0			CLRF	STACK_0
$0453	$0DFA			RLF	STACK_10, F
$0454	$0CF2			RRF	STACK_2, F
$0455	$	SETFUN32EEE:
$0455	$30FF			MOVLW	0xFF
$0456	$0008			RETURN
$0473	$	_FIXSIGN32:
$0473	$1303			BCF	STATUS, RP1
$0474	$1283			BCF	STATUS, RP0
$0475	$1FFA			BTFSS	STACK_10, 7
$0476	$13F2			BCF	STACK_2, 7
$0477	$3000			MOVLW	0
$0478	$0008			RETURN
$042D	$	_SETFOV32:
$042D	$1303			BCF	STATUS, RP1
$042E	$1283			BCF	STATUS, RP0
$042F	$14FB			BSF	STACK_11, 1
$0430	$1FFB			BTFSS	STACK_11, 7
$0431	$2C39			GOTO	SETFOV32EEE
$0432	$30FF			MOVLW	0xFF
$0433	$00F3			MOVWF	STACK_3
$0434	$00F2			MOVWF	STACK_2
$0435	$00F1			MOVWF	STACK_1
$0436	$00F0			MOVWF	STACK_0
$0437	$0DFA			RLF	STACK_10, F
$0438	$0CF2			RRF	STACK_2, F
$0439	$	SETFOV32EEE:
$0439	$30FF			MOVLW	0xFF
$043A	$0008			RETURN
$046B	$	_Delay_22us:
;delays.c,15 :: 		void Delay_22us() {
;delays.c,16 :: 		Delay_us(22);
$046B	$3024			MOVLW	36
$046C	$1303			BCF	STATUS, RP1
$046D	$1283			BCF	STATUS, RP0
$046E	$00FA			MOVWF	STACK_10
$046F	$0BFA			DECFSZ	STACK_10, F
$0470	$2C6F			GOTO	$-1
$0471	$0000			NOP
;delays.c,17 :: 		}
$0472	$0008			RETURN
$0265	$	_NRM4032:
$0265	$1303			BCF	STATUS, RP1
$0266	$1283			BCF	STATUS, RP0
$0267	$187C			BTFSC	STACK_12, 0
$0268	$2A9D			GOTO	NRMRND4032
$0269	$18FC			BTFSC	STACK_12, 1
$026A	$2A6E			GOTO	NRM4032
$026B	$197C			BTFSC	STACK_12, 2
$026C	$2ABC			GOTO	JMPSETFOV32
$026D	$2A67			GOTO	$-6
$026E	$	NRM4032:
$026E	$01A1			CLRF	__math_tempbD
$026F	$0872			MOVF	STACK_2, W
$0270	$1D03			BTFSS	STATUS, Z
$0271	$2A8E			GOTO	NORM4032
$0272	$0871			MOVF	STACK_1, W
$0273	$00F2			MOVWF	STACK_2
$0274	$0870			MOVF	STACK_0, W
$0275	$00F1			MOVWF	STACK_1
$0276	$0878			MOVF	STACK_8, W
$0277	$00F0			MOVWF	STACK_0
$0278	$01F8			CLRF	STACK_8
$0279	$15A1			BSF	__math_tempbD, 3
$027A	$0872			MOVF	STACK_2, W
$027B	$1D03			BTFSS	STATUS, Z
$027C	$2A8E			GOTO	NORM4032
$027D	$0871			MOVF	STACK_1, W
$027E	$00F2			MOVWF	STACK_2
$027F	$0870			MOVF	STACK_0, W
$0280	$00F1			MOVWF	STACK_1
$0281	$01F0			CLRF	STACK_0
$0282	$11A1			BCF	__math_tempbD, 3
$0283	$1621			BSF	__math_tempbD, 4
$0284	$0872			MOVF	STACK_2, W
$0285	$1D03			BTFSS	STATUS, Z
$0286	$2A8E			GOTO	NORM4032
$0287	$0871			MOVF	STACK_1, W
$0288	$00F2			MOVWF	STACK_2
$0289	$01F1			CLRF	STACK_1
$028A	$15A1			BSF	__math_tempbD, 3
$028B	$0872			MOVF	STACK_2, W
$028C	$1903			BTFSC	STATUS, Z
$028D	$2AB0			GOTO	JMPRES032
$028E	$	NORM4032:
$028E	$0821			MOVF	__math_tempbD, W
$028F	$02F3			SUBWF	STACK_3, F
$0290	$1D03			BTFSS	STATUS, Z
$0291	$1C03			BTFSS	STATUS, C
$0292	$2AB4			GOTO	JMPSETFUN32
$0293	$1003			BCF	STATUS, C
$0294	$	NORM4032A:
$0294	$1BF2			BTFSC	STACK_2, 7
$0295	$2A9D			GOTO	NRMRND4032
$0296	$0DF8			RLF	STACK_8, F
$0297	$0DF0			RLF	STACK_0, F
$0298	$0DF1			RLF	STACK_1, F
$0299	$0DF2			RLF	STACK_2, F
$029A	$0BF3			DECFSZ	STACK_3, F
$029B	$2A94			GOTO	NORM4032A
$029C	$2AB4			GOTO	JMPSETFUN32
$029D	$	NRMRND4032:
$029D	$1B7B			BTFSC	STACK_11, 6
$029E	$1C70			BTFSS	STACK_0, 0
$029F	$2AB8			GOTO	JMPFIXSIGN32
$02A0	$1FF8			BTFSS	STACK_8, 7
$02A1	$2AB8			GOTO	JMPFIXSIGN32
$02A2	$0AF0			INCF	STACK_0, F
$02A3	$1903			BTFSC	STATUS, Z
$02A4	$0AF1			INCF	STACK_1, F
$02A5	$1903			BTFSC	STATUS, Z
$02A6	$0AF2			INCF	STACK_2, F
$02A7	$1D03			BTFSS	STATUS, Z
$02A8	$2AB8			GOTO	JMPFIXSIGN32
$02A9	$0CF2			RRF	STACK_2, F
$02AA	$0CF1			RRF	STACK_1, F
$02AB	$0CF0			RRF	STACK_0, F
$02AC	$0AF3			INCF	STACK_3, F
$02AD	$1903			BTFSC	STATUS, Z
$02AE	$2ABC			GOTO	JMPSETFOV32
$02AF	$2AB8			GOTO	JMPFIXSIGN32
$02B0	$	JMPRES032:
$02B0	$3001			MOVLW	0x01
$02B1	$00FC			MOVWF	STACK_12
$02B2	$2462			CALL	_RES032
$02B3	$2ABF			GOTO	NRM4032EEE
$02B4	$	JMPSETFUN32:
$02B4	$3002			MOVLW	0x02
$02B5	$00FC			MOVWF	STACK_12
$02B6	$2449			CALL	_SETFUN32
$02B7	$2ABF			GOTO	NRM4032EEE
$02B8	$	JMPFIXSIGN32:
$02B8	$3004			MOVLW	0x04
$02B9	$00FC			MOVWF	STACK_12
$02BA	$2473			CALL	_FIXSIGN32
$02BB	$2ABF			GOTO	NRM4032EEE
$02BC	$	JMPSETFOV32:
$02BC	$3008			MOVLW	0x08
$02BD	$00FC			MOVWF	STACK_12
$02BE	$242D			CALL	_SETFOV32
$02BF	$	NRM4032EEE:
$02BF	$0000			NOP
$02C0	$0008			RETURN
$0004	$	_SDIV3232L:
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$0874			MOVF	STACK_4, W
$0007	$02F8			SUBWF	STACK_8, F
$0008	$0875			MOVF	STACK_5, W
$0009	$1C03			BTFSS	STATUS, C
$000A	$0F75			INCFSZ	STACK_5, W
$000B	$02F9			SUBWF	STACK_9, F
$000C	$0876			MOVF	STACK_6, W
$000D	$1C03			BTFSS	STATUS, C
$000E	$0F76			INCFSZ	STACK_6, W
$000F	$02FA			SUBWF	STACK_10, F
$0010	$0877			MOVF	STACK_7, W
$0011	$1C03			BTFSS	STATUS, C
$0012	$0F77			INCFSZ	STACK_7, W
$0013	$02FB			SUBWF	STACK_11, F
$0014	$0DF3			RLF	STACK_3, F
$0015	$3007			MOVLW	7
$0016	$00FC			MOVWF	STACK_12
$0017	$	LOOPS3232A:
$0017	$0D73			RLF	STACK_3, W
$0018	$0DF8			RLF	STACK_8, F
$0019	$0DF9			RLF	STACK_9, F
$001A	$0DFA			RLF	STACK_10, F
$001B	$0DFB			RLF	STACK_11, F
$001C	$0874			MOVF	STACK_4, W
$001D	$1C73			BTFSS	STACK_3, 0
$001E	$282D			GOTO	SADD22LA
$001F	$02F8			SUBWF	STACK_8, F
$0020	$0875			MOVF	STACK_5, W
$0021	$1C03			BTFSS	STATUS, C
$0022	$0F75			INCFSZ	STACK_5, W
$0023	$02F9			SUBWF	STACK_9, F
$0024	$0876			MOVF	STACK_6, W
$0025	$1C03			BTFSS	STATUS, C
$0026	$0F76			INCFSZ	STACK_6, W
$0027	$02FA			SUBWF	STACK_10, F
$0028	$0877			MOVF	STACK_7, W
$0029	$1C03			BTFSS	STATUS, C
$002A	$0F77			INCFSZ	STACK_7, W
$002B	$02FB			SUBWF	STACK_11, F
$002C	$283A			GOTO	SOK22LA
$002D	$	SADD22LA:
$002D	$07F8			ADDWF	STACK_8, F
$002E	$0875			MOVF	STACK_5, W
$002F	$1803			BTFSC	STATUS, C
$0030	$0F75			INCFSZ	STACK_5, W
$0031	$07F9			ADDWF	STACK_9, F
$0032	$0876			MOVF	STACK_6, W
$0033	$1803			BTFSC	STATUS, C
$0034	$0F76			INCFSZ	STACK_6, W
$0035	$07FA			ADDWF	STACK_10, F
$0036	$0877			MOVF	STACK_7, W
$0037	$1803			BTFSC	STATUS, C
$0038	$0F77			INCFSZ	STACK_7, W
$0039	$07FB			ADDWF	STACK_11, F
$003A	$	SOK22LA:
$003A	$0DF3			RLF	STACK_3, F
$003B	$0BFC			DECFSZ	STACK_12, F
$003C	$2817			GOTO	LOOPS3232A
$003D	$0D72			RLF	STACK_2, W
$003E	$0DF8			RLF	STACK_8, F
$003F	$0DF9			RLF	STACK_9, F
$0040	$0DFA			RLF	STACK_10, F
$0041	$0DFB			RLF	STACK_11, F
$0042	$0874			MOVF	STACK_4, W
$0043	$1C73			BTFSS	STACK_3, 0
$0044	$2853			GOTO	SADD22L8
$0045	$02F8			SUBWF	STACK_8, F
$0046	$0875			MOVF	STACK_5, W
$0047	$1C03			BTFSS	STATUS, C
$0048	$0F75			INCFSZ	STACK_5, W
$0049	$02F9			SUBWF	STACK_9, F
$004A	$0876			MOVF	STACK_6, W
$004B	$1C03			BTFSS	STATUS, C
$004C	$0F76			INCFSZ	STACK_6, W
$004D	$02FA			SUBWF	STACK_10, F
$004E	$0877			MOVF	STACK_7, W
$004F	$1C03			BTFSS	STATUS, C
$0050	$0F77			INCFSZ	STACK_7, W
$0051	$02FB			SUBWF	STACK_11, F
$0052	$2860			GOTO	SOK22L8
$0053	$	SADD22L8:
$0053	$07F8			ADDWF	STACK_8, F
$0054	$0875			MOVF	STACK_5, W
$0055	$1803			BTFSC	STATUS, C
$0056	$0F75			INCFSZ	STACK_5, W
$0057	$07F9			ADDWF	STACK_9, F
$0058	$0876			MOVF	STACK_6, W
$0059	$1803			BTFSC	STATUS, C
$005A	$0F76			INCFSZ	STACK_6, W
$005B	$07FA			ADDWF	STACK_10, F
$005C	$0877			MOVF	STACK_7, W
$005D	$1803			BTFSC	STATUS, C
$005E	$0F77			INCFSZ	STACK_7, W
$005F	$07FB			ADDWF	STACK_11, F
$0060	$	SOK22L8:
$0060	$0DF2			RLF	STACK_2, F
$0061	$3007			MOVLW	7
$0062	$00FC			MOVWF	STACK_12
$0063	$	LOOPS3232B:
$0063	$0D72			RLF	STACK_2, W
$0064	$0DF8			RLF	STACK_8, F
$0065	$0DF9			RLF	STACK_9, F
$0066	$0DFA			RLF	STACK_10, F
$0067	$0DFB			RLF	STACK_11, F
$0068	$0874			MOVF	STACK_4, W
$0069	$1C72			BTFSS	STACK_2, 0
$006A	$2879			GOTO	SADD22LB
$006B	$02F8			SUBWF	STACK_8, F
$006C	$0875			MOVF	STACK_5, W
$006D	$1C03			BTFSS	STATUS, C
$006E	$0F75			INCFSZ	STACK_5, W
$006F	$02F9			SUBWF	STACK_9, F
$0070	$0876			MOVF	STACK_6, W
$0071	$1C03			BTFSS	STATUS, C
$0072	$0F76			INCFSZ	STACK_6, W
$0073	$02FA			SUBWF	STACK_10, F
$0074	$0877			MOVF	STACK_7, W
$0075	$1C03			BTFSS	STATUS, C
$0076	$0F77			INCFSZ	STACK_7, W
$0077	$02FB			SUBWF	STACK_11, F
$0078	$2886			GOTO	SOK22LB
$0079	$	SADD22LB:
$0079	$07F8			ADDWF	STACK_8, F
$007A	$0875			MOVF	STACK_5, W
$007B	$1803			BTFSC	STATUS, C
$007C	$0F75			INCFSZ	STACK_5, W
$007D	$07F9			ADDWF	STACK_9, F
$007E	$0876			MOVF	STACK_6, W
$007F	$1803			BTFSC	STATUS, C
$0080	$0F76			INCFSZ	STACK_6, W
$0081	$07FA			ADDWF	STACK_10, F
$0082	$0877			MOVF	STACK_7, W
$0083	$1803			BTFSC	STATUS, C
$0084	$0F77			INCFSZ	STACK_7, W
$0085	$07FB			ADDWF	STACK_11, F
$0086	$	SOK22LB:
$0086	$0DF2			RLF	STACK_2, F
$0087	$0BFC			DECFSZ	STACK_12, F
$0088	$2863			GOTO	LOOPS3232B
$0089	$0D71			RLF	STACK_1, W
$008A	$0DF8			RLF	STACK_8, F
$008B	$0DF9			RLF	STACK_9, F
$008C	$0DFA			RLF	STACK_10, F
$008D	$0DFB			RLF	STACK_11, F
$008E	$0874			MOVF	STACK_4, W
$008F	$1C72			BTFSS	STACK_2, 0
$0090	$289F			GOTO	SADD22L16
$0091	$02F8			SUBWF	STACK_8, F
$0092	$0875			MOVF	STACK_5, W
$0093	$1C03			BTFSS	STATUS, C
$0094	$0F75			INCFSZ	STACK_5, W
$0095	$02F9			SUBWF	STACK_9, F
$0096	$0876			MOVF	STACK_6, W
$0097	$1C03			BTFSS	STATUS, C
$0098	$0F76			INCFSZ	STACK_6, W
$0099	$02FA			SUBWF	STACK_10, F
$009A	$0877			MOVF	STACK_7, W
$009B	$1C03			BTFSS	STATUS, C
$009C	$0F77			INCFSZ	STACK_7, W
$009D	$02FB			SUBWF	STACK_11, F
$009E	$28AC			GOTO	SOK22L16
$009F	$	SADD22L16:
$009F	$07F8			ADDWF	STACK_8, F
$00A0	$0875			MOVF	STACK_5, W
$00A1	$1803			BTFSC	STATUS, C
$00A2	$0F75			INCFSZ	STACK_5, W
$00A3	$07F9			ADDWF	STACK_9, F
$00A4	$0876			MOVF	STACK_6, W
$00A5	$1803			BTFSC	STATUS, C
$00A6	$0F76			INCFSZ	STACK_6, W
$00A7	$07FA			ADDWF	STACK_10, F
$00A8	$0877			MOVF	STACK_7, W
$00A9	$1803			BTFSC	STATUS, C
$00AA	$0F77			INCFSZ	STACK_7, W
$00AB	$07FB			ADDWF	STACK_11, F
$00AC	$	SOK22L16:
$00AC	$0DF1			RLF	STACK_1, F
$00AD	$3007			MOVLW	7
$00AE	$00FC			MOVWF	STACK_12
$00AF	$	LOOPS3232C:
$00AF	$0D71			RLF	STACK_1, W
$00B0	$0DF8			RLF	STACK_8, F
$00B1	$0DF9			RLF	STACK_9, F
$00B2	$0DFA			RLF	STACK_10, F
$00B3	$0DFB			RLF	STACK_11, F
$00B4	$0874			MOVF	STACK_4, W
$00B5	$1C71			BTFSS	STACK_1, 0
$00B6	$28C5			GOTO	SADD22LC
$00B7	$02F8			SUBWF	STACK_8, F
$00B8	$0875			MOVF	STACK_5, W
$00B9	$1C03			BTFSS	STATUS, C
$00BA	$0F75			INCFSZ	STACK_5, W
$00BB	$02F9			SUBWF	STACK_9, F
$00BC	$0876			MOVF	STACK_6, W
$00BD	$1C03			BTFSS	STATUS, C
$00BE	$0F76			INCFSZ	STACK_6, W
$00BF	$02FA			SUBWF	STACK_10, F
$00C0	$0877			MOVF	STACK_7, W
$00C1	$1C03			BTFSS	STATUS, C
$00C2	$0F77			INCFSZ	STACK_7, W
$00C3	$02FB			SUBWF	STACK_11, F
$00C4	$28D2			GOTO	SOK22LC
$00C5	$	SADD22LC:
$00C5	$07F8			ADDWF	STACK_8, F
$00C6	$0875			MOVF	STACK_5, W
$00C7	$1803			BTFSC	STATUS, C
$00C8	$0F75			INCFSZ	STACK_5, W
$00C9	$07F9			ADDWF	STACK_9, F
$00CA	$0876			MOVF	STACK_6, W
$00CB	$1803			BTFSC	STATUS, C
$00CC	$0F76			INCFSZ	STACK_6, W
$00CD	$07FA			ADDWF	STACK_10, F
$00CE	$0877			MOVF	STACK_7, W
$00CF	$1803			BTFSC	STATUS, C
$00D0	$0F77			INCFSZ	STACK_7, W
$00D1	$07FB			ADDWF	STACK_11, F
$00D2	$	SOK22LC:
$00D2	$0DF1			RLF	STACK_1, F
$00D3	$0BFC			DECFSZ	STACK_12, F
$00D4	$28AF			GOTO	LOOPS3232C
$00D5	$0D70			RLF	STACK_0, W
$00D6	$0DF8			RLF	STACK_8, F
$00D7	$0DF9			RLF	STACK_9, F
$00D8	$0DFA			RLF	STACK_10, F
$00D9	$0DFB			RLF	STACK_11, F
$00DA	$0874			MOVF	STACK_4, W
$00DB	$1C71			BTFSS	STACK_1, 0
$00DC	$28EB			GOTO	SADD22L24
$00DD	$02F8			SUBWF	STACK_8, F
$00DE	$0875			MOVF	STACK_5, W
$00DF	$1C03			BTFSS	STATUS, C
$00E0	$0F75			INCFSZ	STACK_5, W
$00E1	$02F9			SUBWF	STACK_9, F
$00E2	$0876			MOVF	STACK_6, W
$00E3	$1C03			BTFSS	STATUS, C
$00E4	$0F76			INCFSZ	STACK_6, W
$00E5	$02FA			SUBWF	STACK_10, F
$00E6	$0877			MOVF	STACK_7, W
$00E7	$1C03			BTFSS	STATUS, C
$00E8	$0F77			INCFSZ	STACK_7, W
$00E9	$02FB			SUBWF	STACK_11, F
$00EA	$28F8			GOTO	SOK22L24
$00EB	$	SADD22L24:
$00EB	$07F8			ADDWF	STACK_8, F
$00EC	$0875			MOVF	STACK_5, W
$00ED	$1803			BTFSC	STATUS, C
$00EE	$0F75			INCFSZ	STACK_5, W
$00EF	$07F9			ADDWF	STACK_9, F
$00F0	$0876			MOVF	STACK_6, W
$00F1	$1803			BTFSC	STATUS, C
$00F2	$0F76			INCFSZ	STACK_6, W
$00F3	$07FA			ADDWF	STACK_10, F
$00F4	$0877			MOVF	STACK_7, W
$00F5	$1803			BTFSC	STATUS, C
$00F6	$0F77			INCFSZ	STACK_7, W
$00F7	$07FB			ADDWF	STACK_11, F
$00F8	$	SOK22L24:
$00F8	$0DF0			RLF	STACK_0, F
$00F9	$3007			MOVLW	7
$00FA	$00FC			MOVWF	STACK_12
$00FB	$	LOOPS3232D:
$00FB	$0D70			RLF	STACK_0, W
$00FC	$0DF8			RLF	STACK_8, F
$00FD	$0DF9			RLF	STACK_9, F
$00FE	$0DFA			RLF	STACK_10, F
$00FF	$0DFB			RLF	STACK_11, F
$0100	$0874			MOVF	STACK_4, W
$0101	$1C70			BTFSS	STACK_0, 0
$0102	$2911			GOTO	SADD22LD
$0103	$02F8			SUBWF	STACK_8, F
$0104	$0875			MOVF	STACK_5, W
$0105	$1C03			BTFSS	STATUS, C
$0106	$0F75			INCFSZ	STACK_5, W
$0107	$02F9			SUBWF	STACK_9, F
$0108	$0876			MOVF	STACK_6, W
$0109	$1C03			BTFSS	STATUS, C
$010A	$0F76			INCFSZ	STACK_6, W
$010B	$02FA			SUBWF	STACK_10, F
$010C	$0877			MOVF	STACK_7, W
$010D	$1C03			BTFSS	STATUS, C
$010E	$0F77			INCFSZ	STACK_7, W
$010F	$02FB			SUBWF	STACK_11, F
$0110	$291E			GOTO	SOK22LD
$0111	$	SADD22LD:
$0111	$07F8			ADDWF	STACK_8, F
$0112	$0875			MOVF	STACK_5, W
$0113	$1803			BTFSC	STATUS, C
$0114	$0F75			INCFSZ	STACK_5, W
$0115	$07F9			ADDWF	STACK_9, F
$0116	$0876			MOVF	STACK_6, W
$0117	$1803			BTFSC	STATUS, C
$0118	$0F76			INCFSZ	STACK_6, W
$0119	$07FA			ADDWF	STACK_10, F
$011A	$0877			MOVF	STACK_7, W
$011B	$1803			BTFSC	STATUS, C
$011C	$0F77			INCFSZ	STACK_7, W
$011D	$07FB			ADDWF	STACK_11, F
$011E	$	SOK22LD:
$011E	$0DF0			RLF	STACK_0, F
$011F	$0BFC			DECFSZ	STACK_12, F
$0120	$28FB			GOTO	LOOPS3232D
$0121	$1870			BTFSC	STACK_0, 0
$0122	$2931			GOTO	SOK22L
$0123	$0874			MOVF	STACK_4, W
$0124	$07F8			ADDWF	STACK_8, F
$0125	$0875			MOVF	STACK_5, W
$0126	$1803			BTFSC	STATUS, C
$0127	$0F75			INCFSZ	STACK_5, W
$0128	$07F9			ADDWF	STACK_9, F
$0129	$0876			MOVF	STACK_6, W
$012A	$1803			BTFSC	STATUS, C
$012B	$0F76			INCFSZ	STACK_6, W
$012C	$07FA			ADDWF	STACK_10, F
$012D	$0877			MOVF	STACK_7, W
$012E	$1803			BTFSC	STATUS, C
$012F	$0F77			INCFSZ	STACK_7, W
$0130	$07FB			ADDWF	STACK_11, F
$0131	$	SOK22L:
$0131	$0008			RETURN
$043B	$	_COMFREM:
$043B	$1303			BCF	STATUS, RP1
$043C	$1283			BCF	STATUS, RP0
$043D	$09FB			COMF	STACK_11, F
$043E	$09FA			COMF	STACK_10, F
$043F	$09F9			COMF	STACK_9, F
$0440	$09F8			COMF	STACK_8, F
$0441	$0AF8			INCF	STACK_8, F
$0442	$1903			BTFSC	STATUS, Z
$0443	$0AF9			INCF	STACK_9, F
$0444	$1903			BTFSC	STATUS, Z
$0445	$0AFA			INCF	STACK_10, F
$0446	$1903			BTFSC	STATUS, Z
$0447	$0AFB			INCF	STACK_11, F
$0448	$0008			RETURN
$0390	$	_Div_16x16_S_L:
$0390	$1303			BCF	STATUS, RP1
$0391	$1283			BCF	STATUS, RP0
$0392	$0D71			RLF	STACK_1, W
$0393	$0DF8			RLF	STACK_8, F
$0394	$0DF9			RLF	STACK_9, F
$0395	$0874			MOVF	STACK_4, W
$0396	$02F8			SUBWF	STACK_8, F
$0397	$0875			MOVF	STACK_5, W
$0398	$1C03			BTFSS	STATUS, C
$0399	$0F75			INCFSZ	STACK_5, W
$039A	$02F9			SUBWF	STACK_9, F
$039B	$0DF0			RLF	STACK_0, F
$039C	$0DF1			RLF	STACK_1, F
$039D	$300F			MOVLW	15
$039E	$00FC			MOVWF	STACK_12
$039F	$0D71			RLF	STACK_1, W
$03A0	$0DF8			RLF	STACK_8, F
$03A1	$0DF9			RLF	STACK_9, F
$03A2	$0874			MOVF	STACK_4, W
$03A3	$1C70			BTFSS	STACK_0, 0
$03A4	$2BAB			GOTO	$+7
$03A5	$02F8			SUBWF	STACK_8, F
$03A6	$0875			MOVF	STACK_5, W
$03A7	$1C03			BTFSS	STATUS, C
$03A8	$0F75			INCFSZ	STACK_5, W
$03A9	$02F9			SUBWF	STACK_9, F
$03AA	$2BB0			GOTO	$+6
$03AB	$07F8			ADDWF	STACK_8, F
$03AC	$0875			MOVF	STACK_5, W
$03AD	$1803			BTFSC	STATUS, C
$03AE	$0F75			INCFSZ	STACK_5, W
$03AF	$07F9			ADDWF	STACK_9, F
$03B0	$0DF0			RLF	STACK_0, F
$03B1	$0DF1			RLF	STACK_1, F
$03B2	$0BFC			DECFSZ	STACK_12, F
$03B3	$2B9F			GOTO	$-20
$03B4	$1870			BTFSC	STACK_0, 0
$03B5	$2BBC			GOTO	$+7
$03B6	$0874			MOVF	STACK_4, W
$03B7	$07F8			ADDWF	STACK_8, F
$03B8	$0875			MOVF	STACK_5, W
$03B9	$1803			BTFSC	STATUS, C
$03BA	$0F75			INCFSZ	STACK_5, W
$03BB	$07F9			ADDWF	STACK_9, F
$03BC	$0000			NOP
$03BD	$0008			RETURN
$0362	$	_Adc_Read:
$0362	$1303			BCF	STATUS, RP1
$0363	$1283			BCF	STATUS, RP0
$0364	$019F			CLRF	ADCON0, 1
$0365	$30C0			MOVLW	192
$0366	$049F			IORWF	ADCON0, 1
$0367	$1683			BSF	STATUS, RP0
$0368	$171F			BSF	ADCON1, 6
$0369	$179F			BSF	ADCON1, 7
$036A	$1283			BCF	STATUS, RP0
$036B	$0856			MOVF	FARG_Adc_Read+0, 0
$036C	$00F0			MOVWF	STACK_0
$036D	$0DF0			RLF	STACK_0, 1
$036E	$1070			BCF	STACK_0, 0
$036F	$0DF0			RLF	STACK_0, 1
$0370	$1070			BCF	STACK_0, 0
$0371	$0DF0			RLF	STACK_0, 1
$0372	$1070			BCF	STACK_0, 0
$0373	$0870			MOVF	STACK_0, 0
$0374	$049F			IORWF	ADCON0, 1
$0375	$141F			BSF	ADCON0, 0
$0376	$246B			CALL	_Delay_22us
$0377	$151F			BSF	ADCON0, 2
$0378	$	L_Adc_Read_0:
$0378	$1D1F			BTFSS	ADCON0, 2
$0379	$2B7C			GOTO	L_Adc_Read_1
$037A	$0000			NOP
$037B	$2B78			GOTO	L_Adc_Read_0
$037C	$	L_Adc_Read_1:
$037C	$101F			BCF	ADCON0, 0
$037D	$3008			MOVLW	8
$037E	$00F2			MOVWF	STACK_2
$037F	$081E			MOVF	ADRESH, 0
$0380	$00F0			MOVWF	STACK_0
$0381	$01F1			CLRF	STACK_0+1
$0382	$0872			MOVF	STACK_2, 0
$0383	$	L_Adc_Read_2:
$0383	$1903			BTFSC	STATUS, Z
$0384	$2B8A			GOTO	L_Adc_Read_3
$0385	$0DF0			RLF	STACK_0, 1
$0386	$0DF1			RLF	STACK_0+1, 1
$0387	$1070			BCF	STACK_0, 0
$0388	$3FFF			ADDLW	255
$0389	$2B83			GOTO	L_Adc_Read_2
$038A	$	L_Adc_Read_3:
$038A	$1683			BSF	STATUS, RP0
$038B	$081E			MOVF	ADRESL, 0
$038C	$04F0			IORWF	STACK_0, 1
$038D	$3000			MOVLW	0
$038E	$04F1			IORWF	STACK_0+1, 1
$038F	$0008			RETURN
$03E4	$	_Longword2Double:
$03E4	$1303			BCF	STATUS, RP1
$03E5	$1283			BCF	STATUS, RP0
$03E6	$0870			MOVF	STACK_0, W
$03E7	$00F8			MOVWF	STACK_8
$03E8	$0871			MOVF	STACK_1, W
$03E9	$00F0			MOVWF	STACK_0
$03EA	$0872			MOVF	STACK_2, W
$03EB	$00F1			MOVWF	STACK_1
$03EC	$0873			MOVF	STACK_3, W
$03ED	$00F2			MOVWF	STACK_2
$03EE	$01F3			CLRF	STACK_3
$03EF	$	FLO32U32:
$03EF	$01FB			CLRF	STACK_11
$03F0	$01FC			CLRF	STACK_12
$03F1	$309E			MOVLW	0x9E
$03F2	$00F3			MOVWF	STACK_3
$03F3	$01FA			CLRF	STACK_10
$03F4	$3002			MOVLW	0x02
$03F5	$00FC			MOVWF	STACK_12
$03F6	$2265			CALL	_NRM4032
$03F7	$0008			RETURN
$01CB	$	_Div_32x32_S:
$01CB	$1303			BCF	STATUS, RP1
$01CC	$1283			BCF	STATUS, RP0
$01CD	$	FXD3232S:
$01CD	$01FC			CLRF	STACK_12
$01CE	$1BF7			BTFSC	STACK_7, 7
$01CF	$0AFC			INCF	STACK_12, F
$01D0	$01FD			CLRF	STACK_13
$01D1	$01FB			CLRF	STACK_11
$01D2	$01FA			CLRF	STACK_10
$01D3	$01F9			CLRF	STACK_9
$01D4	$01F8			CLRF	STACK_8
$01D5	$0873			MOVF	STACK_3, W
$01D6	$0472			IORWF	STACK_2, W
$01D7	$0471			IORWF	STACK_1, W
$01D8	$0470			IORWF	STACK_0, W
$01D9	$1903			BTFSC	STATUS, Z
$01DA	$2A5F			GOTO	END_ALL
$01DB	$0873			MOVF	STACK_3, W
$01DC	$0677			XORWF	STACK_7, W
$01DD	$00A0			MOVWF	___math_tempb
$01DE	$1BA0			BTFSC	___math_tempb, 7
$01DF	$09FD			COMF	STACK_13, F
$01E0	$1FF7			BTFSS	STACK_7, 7
$01E1	$29ED			GOTO	CA3232S
$01E2	$09F4			COMF	STACK_4, F
$01E3	$09F5			COMF	STACK_5, F
$01E4	$09F6			COMF	STACK_6, F
$01E5	$09F7			COMF	STACK_7, F
$01E6	$0AF4			INCF	STACK_4, F
$01E7	$1903			BTFSC	STATUS, Z
$01E8	$0AF5			INCF	STACK_5, F
$01E9	$1903			BTFSC	STATUS, Z
$01EA	$0AF6			INCF	STACK_6, F
$01EB	$1903			BTFSC	STATUS, Z
$01EC	$0AF7			INCF	STACK_7, F
$01ED	$	CA3232S:
$01ED	$1FF3			BTFSS	STACK_3, 7
$01EE	$29FA			GOTO	C3232SX
$01EF	$09F0			COMF	STACK_0, F
$01F0	$09F1			COMF	STACK_1, F
$01F1	$09F2			COMF	STACK_2, F
$01F2	$09F3			COMF	STACK_3, F
$01F3	$0AF0			INCF	STACK_0, F
$01F4	$1903			BTFSC	STATUS, Z
$01F5	$0AF1			INCF	STACK_1, F
$01F6	$1903			BTFSC	STATUS, Z
$01F7	$0AF2			INCF	STACK_2, F
$01F8	$1903			BTFSC	STATUS, Z
$01F9	$0AF3			INCF	STACK_3, F
$01FA	$	C3232SX:
$01FA	$0873			MOVF	STACK_3, W
$01FB	$0477			IORWF	STACK_7, W
$01FC	$00A0			MOVWF	___math_tempb
$01FD	$1BA0			BTFSC	___math_tempb, 7
$01FE	$2A1B			GOTO	C3232SX1
$01FF	$	C3232S:
$01FF	$2004			CALL	_SDIV3232L
$0200	$	C3232S2:
$0200	$1BFC			BTFSC	STACK_12, 7
$0201	$2A38			GOTO	C3232SX4
$0202	$	C3232SOK:
$0202	$1FFD			BTFSS	STACK_13, 7
$0203	$2A5F			GOTO	END_ALL
$0204	$09F0			COMF	STACK_0, F
$0205	$09F1			COMF	STACK_1, F
$0206	$09F2			COMF	STACK_2, F
$0207	$09F3			COMF	STACK_3, F
$0208	$0AF0			INCF	STACK_0, F
$0209	$1903			BTFSC	STATUS, Z
$020A	$0AF1			INCF	STACK_1, F
$020B	$1903			BTFSC	STATUS, Z
$020C	$0AF2			INCF	STACK_2, F
$020D	$1903			BTFSC	STATUS, Z
$020E	$0AF3			INCF	STACK_3, F
$020F	$09F8			COMF	STACK_8, F
$0210	$09F9			COMF	STACK_9, F
$0211	$09FA			COMF	STACK_10, F
$0212	$09FB			COMF	STACK_11, F
$0213	$0AF8			INCF	STACK_8, F
$0214	$1903			BTFSC	STATUS, Z
$0215	$0AF9			INCF	STACK_9, F
$0216	$1903			BTFSC	STATUS, Z
$0217	$0AFA			INCF	STACK_10, F
$0218	$1903			BTFSC	STATUS, Z
$0219	$0AFB			INCF	STACK_11, F
$021A	$2A5F			GOTO	END_ALL
$021B	$	C3232SX1:
$021B	$1FF7			BTFSS	STACK_7, 7
$021C	$2A32			GOTO	C3232SX3
$021D	$1BF3			BTFSC	STACK_3, 7
$021E	$2A2C			GOTO	C3232SX2
$021F	$0873			MOVF	STACK_3, W
$0220	$00FB			MOVWF	STACK_11
$0221	$0872			MOVF	STACK_2, W
$0222	$00FA			MOVWF	STACK_10
$0223	$0871			MOVF	STACK_1, W
$0224	$00F9			MOVWF	STACK_9
$0225	$0870			MOVF	STACK_0, W
$0226	$00F8			MOVWF	STACK_8
$0227	$01F3			CLRF	STACK_3
$0228	$01F2			CLRF	STACK_2
$0229	$01F1			CLRF	STACK_1
$022A	$01F0			CLRF	STACK_0
$022B	$2A02			GOTO	C3232SOK
$022C	$	C3232SX2:
$022C	$01F3			CLRF	STACK_3
$022D	$01F2			CLRF	STACK_2
$022E	$01F1			CLRF	STACK_1
$022F	$01F0			CLRF	STACK_0
$0230	$0AF0			INCF	STACK_0, F
$0231	$3400			RETLW	0x00
$0232	$	C3232SX3:
$0232	$09F3			COMF	STACK_3, F
$0233	$09F2			COMF	STACK_2, F
$0234	$09F1			COMF	STACK_1, F
$0235	$09F0			COMF	STACK_0, F
$0236	$17FC			BSF	STACK_12, 7
$0237	$29FF			GOTO	C3232S
$0238	$	C3232SX4:
$0238	$0AF8			INCF	STACK_8, F
$0239	$1903			BTFSC	STATUS, Z
$023A	$0AF9			INCF	STACK_9, F
$023B	$1903			BTFSC	STATUS, Z
$023C	$0AFA			INCF	STACK_10, F
$023D	$1903			BTFSC	STATUS, Z
$023E	$0AFB			INCF	STACK_11, F
$023F	$0874			MOVF	STACK_4, W
$0240	$0278			SUBWF	STACK_8, W
$0241	$1D03			BTFSS	STATUS, Z
$0242	$2A02			GOTO	C3232SOK
$0243	$0875			MOVF	STACK_5, W
$0244	$0279			SUBWF	STACK_9, W
$0245	$1D03			BTFSS	STATUS, Z
$0246	$2A02			GOTO	C3232SOK
$0247	$0876			MOVF	STACK_6, W
$0248	$027A			SUBWF	STACK_10, W
$0249	$1D03			BTFSS	STATUS, Z
$024A	$2A02			GOTO	C3232SOK
$024B	$0877			MOVF	STACK_7, W
$024C	$027B			SUBWF	STACK_11, W
$024D	$1D03			BTFSS	STATUS, Z
$024E	$2A02			GOTO	C3232SOK
$024F	$01FB			CLRF	STACK_11
$0250	$01FA			CLRF	STACK_10
$0251	$01F9			CLRF	STACK_9
$0252	$01F8			CLRF	STACK_8
$0253	$0AF0			INCF	STACK_0, F
$0254	$1903			BTFSC	STATUS, Z
$0255	$0AF1			INCF	STACK_1, F
$0256	$1903			BTFSC	STATUS, Z
$0257	$0AF2			INCF	STACK_2, F
$0258	$1903			BTFSC	STATUS, Z
$0259	$0AF3			INCF	STACK_3, F
$025A	$1FF3			BTFSS	STACK_3, 7
$025B	$2A02			GOTO	C3232SOK
$025C	$01A0			CLRF	___math_tempb
$025D	$1620			BSF	___math_tempb, 4
$025E	$34FF			RETLW	0xFF
$025F	$	END_ALL:
$025F	$01A0			CLRF	___math_tempb
$0260	$1C7C			BTFSS	STACK_12, 0
$0261	$2A63			GOTO	avoid_comfrem
$0262	$243B			CALL	_COMFREM
$0263	$	avoid_comfrem:
$0263	$3F00			ADDLW	0x00
$0264	$0008			RETURN
$0308	$	_Div_16x16_S:
$0308	$1303			BCF	STATUS, RP1
$0309	$1283			BCF	STATUS, RP0
$030A	$01FD			CLRF	STACK_13
$030B	$01F9			CLRF	STACK_9
$030C	$01F8			CLRF	STACK_8
$030D	$0871			MOVF	STACK_1, W
$030E	$0470			IORWF	STACK_0, W
$030F	$1903			BTFSC	STATUS, Z
$0310	$3400			RETLW	0
$0311	$0871			MOVF	STACK_1, W
$0312	$0675			XORWF	STACK_5, W
$0313	$00FA			MOVWF	STACK_10
$0314	$1BFA			BTFSC	STACK_10, 7
$0315	$09FD			COMF	STACK_13, F
$0316	$01FB			CLRF	STACK_11
$0317	$1FF5			BTFSS	STACK_5, 7
$0318	$2B1E			GOTO	$+6
$0319	$09F4			COMF	STACK_4, F
$031A	$09F5			COMF	STACK_5, F
$031B	$0AF4			INCF	STACK_4, F
$031C	$1903			BTFSC	STATUS, Z
$031D	$0AF5			INCF	STACK_5, F
$031E	$1FF1			BTFSS	STACK_1, 7
$031F	$2B25			GOTO	$+6
$0320	$09F0			COMF	STACK_0, F
$0321	$09F1			COMF	STACK_1, F
$0322	$0AF0			INCF	STACK_0, F
$0323	$1903			BTFSC	STATUS, Z
$0324	$0AF1			INCF	STACK_1, F
$0325	$0871			MOVF	STACK_1, W
$0326	$0475			IORWF	STACK_5, W
$0327	$00FA			MOVWF	STACK_10
$0328	$1BFA			BTFSC	STACK_10, 7
$0329	$2B3A			GOTO	$+17
$032A	$2390			CALL	_Div_16x16_S_L
$032B	$187B			BTFSC	STACK_11, 0
$032C	$2B4D			GOTO	$+33
$032D	$1FFD			BTFSS	STACK_13, 7
$032E	$3400			RETLW	0
$032F	$09F0			COMF	STACK_0, F
$0330	$09F1			COMF	STACK_1, F
$0331	$0AF0			INCF	STACK_0, F
$0332	$1903			BTFSC	STATUS, Z
$0333	$0AF1			INCF	STACK_1, F
$0334	$09F8			COMF	STACK_8, F
$0335	$09F9			COMF	STACK_9, F
$0336	$0AF8			INCF	STACK_8, F
$0337	$1903			BTFSC	STATUS, Z
$0338	$0AF9			INCF	STACK_9, F
$0339	$3400			RETLW	0
$033A	$1FF5			BTFSS	STACK_5, 7
$033B	$2B49			GOTO	$+14
$033C	$1BF1			BTFSC	STACK_1, 7
$033D	$2B45			GOTO	$+8
$033E	$0871			MOVF	STACK_1, W
$033F	$00F9			MOVWF	STACK_9
$0340	$0870			MOVF	STACK_0, W
$0341	$00F8			MOVWF	STACK_8
$0342	$01F1			CLRF	STACK_1
$0343	$01F0			CLRF	STACK_0
$0344	$2B2D			GOTO	$-23
$0345	$01F1			CLRF	STACK_1
$0346	$01F0			CLRF	STACK_0
$0347	$0AF0			INCF	STACK_0, F
$0348	$3400			RETLW	0
$0349	$09F1			COMF	STACK_1, F
$034A	$09F0			COMF	STACK_0, F
$034B	$0AFB			INCF	STACK_11, F
$034C	$2B2A			GOTO	$-34
$034D	$0AF8			INCF	STACK_8, F
$034E	$1903			BTFSC	STATUS, Z
$034F	$0AF9			INCF	STACK_9, F
$0350	$0874			MOVF	STACK_4, W
$0351	$0278			SUBWF	STACK_8, W
$0352	$1D03			BTFSS	STATUS, Z
$0353	$2B2D			GOTO	$-38
$0354	$0875			MOVF	STACK_5, W
$0355	$0279			SUBWF	STACK_9, W
$0356	$1D03			BTFSS	STATUS, Z
$0357	$2B2D			GOTO	$-42
$0358	$01F9			CLRF	STACK_9
$0359	$01F8			CLRF	STACK_8
$035A	$0AF0			INCF	STACK_0, F
$035B	$1903			BTFSC	STATUS, Z
$035C	$0AF1			INCF	STACK_1, F
$035D	$1FF1			BTFSS	STACK_1, 7
$035E	$2B2D			GOTO	$-49
$035F	$0000			NOP
$0360	$34FF			RETLW	255
$0361	$0008			RETURN
$03BE	$	_pressure:
;depth.c,7 :: 		long pressure()
;depth.c,9 :: 		v  = prs = adc_read(2) ;   //READ ADC INPUT AT AN2
$03BE	$3002			MOVLW	2
$03BF	$1303			BCF	STATUS, RP1
$03C0	$1283			BCF	STATUS, RP0
$03C1	$00D6			MOVWF	FARG_Adc_Read+0
$03C2	$2362			CALL	_Adc_Read
$03C3	$0870			MOVF	STACK_0, 0
$03C4	$1283			BCF	STATUS, RP0
$03C5	$00A6			MOVWF	_prs
$03C6	$0871			MOVF	STACK_0+1, 0
$03C7	$00A7			MOVWF	_prs+1
$03C8	$01A8			CLRF	_prs+2
$03C9	$01A9			CLRF	_prs+3
$03CA	$0826			MOVF	_prs, 0
$03CB	$00F0			MOVWF	STACK_0
$03CC	$0827			MOVF	_prs+1, 0
$03CD	$00F1			MOVWF	STACK_0+1
$03CE	$0828			MOVF	_prs+2, 0
$03CF	$00F2			MOVWF	STACK_0+2
$03D0	$0829			MOVF	_prs+3, 0
$03D1	$00F3			MOVWF	STACK_0+3
$03D2	$23E4			CALL	_longword2double
$03D3	$0870			MOVF	STACK_0, 0
$03D4	$00A2			MOVWF	_v
$03D5	$0871			MOVF	STACK_0+1, 0
$03D6	$00A3			MOVWF	_v+1
$03D7	$0872			MOVF	STACK_0+2, 0
$03D8	$00A4			MOVWF	_v+2
$03D9	$0873			MOVF	STACK_0+3, 0
$03DA	$00A5			MOVWF	_v+3
;depth.c,16 :: 		return depth;
$03DB	$082A			MOVF	_depth, 0
$03DC	$00F0			MOVWF	STACK_0
$03DD	$082B			MOVF	_depth+1, 0
$03DE	$00F1			MOVWF	STACK_0+1
$03DF	$082C			MOVF	_depth+2, 0
$03E0	$00F2			MOVWF	STACK_0+2
$03E1	$082D			MOVF	_depth+3, 0
$03E2	$00F3			MOVWF	STACK_0+3
;depth.c,17 :: 		}
$03E3	$0008			RETURN
$0132	$	_itoa:
;depth.c,19 :: 		void itoa(char *buf, long depth)
;depth.c,21 :: 		int i, len=0;
$0132	$1303			BCF	STATUS, RP1
$0133	$1283			BCF	STATUS, RP0
$0134	$01D3			CLRF	itoa_len_L0
$0135	$01D4			CLRF	itoa_len_L0+1
;depth.c,23 :: 		while(depth)
$0136	$	L_itoa_0:
$0136	$084D			MOVF	FARG_itoa+1, 0
$0137	$044E			IORWF	FARG_itoa+2, 0
$0138	$044F			IORWF	FARG_itoa+3, 0
$0139	$0450			IORWF	FARG_itoa+4, 0
$013A	$1903			BTFSC	STATUS, Z
$013B	$2974			GOTO	L_itoa_1
;depth.c,25 :: 		*buf = '0' + (depth%10);
$013C	$300A			MOVLW	10
$013D	$00F4			MOVWF	STACK_4
$013E	$01F5			CLRF	STACK_4+1
$013F	$01F6			CLRF	STACK_4+2
$0140	$01F7			CLRF	STACK_4+3
$0141	$084D			MOVF	FARG_itoa+1, 0
$0142	$00F0			MOVWF	STACK_0
$0143	$084E			MOVF	FARG_itoa+2, 0
$0144	$00F1			MOVWF	STACK_0+1
$0145	$084F			MOVF	FARG_itoa+3, 0
$0146	$00F2			MOVWF	STACK_0+2
$0147	$0850			MOVF	FARG_itoa+4, 0
$0148	$00F3			MOVWF	STACK_0+3
$0149	$21CB			CALL	_div_32x32_s
$014A	$0878			MOVF	STACK_8, 0
$014B	$00F0			MOVWF	STACK_0
$014C	$0879			MOVF	STACK_9, 0
$014D	$00F1			MOVWF	STACK_1
$014E	$087A			MOVF	STACK_10, 0
$014F	$00F2			MOVWF	STACK_2
$0150	$087B			MOVF	STACK_11, 0
$0151	$00F3			MOVWF	STACK_3
$0152	$0870			MOVF	STACK_0, 0
$0153	$3F30			ADDLW	48
$0154	$00F4			MOVWF	STACK_4
$0155	$084C			MOVF	FARG_itoa+0, 0
$0156	$0084			MOVWF	FSR
$0157	$0874			MOVF	STACK_4, 0
$0158	$0080			MOVWF	INDF
;depth.c,26 :: 		depth = depth/10;
$0159	$300A			MOVLW	10
$015A	$00F4			MOVWF	STACK_4
$015B	$01F5			CLRF	STACK_4+1
$015C	$01F6			CLRF	STACK_4+2
$015D	$01F7			CLRF	STACK_4+3
$015E	$084D			MOVF	FARG_itoa+1, 0
$015F	$00F0			MOVWF	STACK_0
$0160	$084E			MOVF	FARG_itoa+2, 0
$0161	$00F1			MOVWF	STACK_0+1
$0162	$084F			MOVF	FARG_itoa+3, 0
$0163	$00F2			MOVWF	STACK_0+2
$0164	$0850			MOVF	FARG_itoa+4, 0
$0165	$00F3			MOVWF	STACK_0+3
$0166	$21CB			CALL	_div_32x32_s
$0167	$0870			MOVF	STACK_0, 0
$0168	$00CD			MOVWF	FARG_itoa+1
$0169	$0871			MOVF	STACK_0+1, 0
$016A	$00CE			MOVWF	FARG_itoa+2
$016B	$0872			MOVF	STACK_0+2, 0
$016C	$00CF			MOVWF	FARG_itoa+3
$016D	$0873			MOVF	STACK_0+3, 0
$016E	$00D0			MOVWF	FARG_itoa+4
;depth.c,27 :: 		buf++;
$016F	$0ACC			INCF	FARG_itoa+0, 1
;depth.c,28 :: 		len++;
$0170	$0AD3			INCF	itoa_len_L0, 1
$0171	$1903			BTFSC	STATUS, Z
$0172	$0AD4			INCF	itoa_len_L0+1, 1
;depth.c,29 :: 		}
$0173	$2936			GOTO	L_itoa_0
$0174	$	L_itoa_1:
;depth.c,30 :: 		*buf=0;
$0174	$084C			MOVF	FARG_itoa+0, 0
$0175	$0084			MOVWF	FSR
$0176	$0180			CLRF	INDF, 1
;depth.c,31 :: 		buf = buf-len;
$0177	$0853			MOVF	itoa_len_L0, 0
$0178	$02CC			SUBWF	FARG_itoa+0, 1
;depth.c,32 :: 		len = len/2;
$0179	$3002			MOVLW	2
$017A	$00F4			MOVWF	STACK_4
$017B	$3000			MOVLW	0
$017C	$00F5			MOVWF	STACK_4+1
$017D	$0853			MOVF	itoa_len_L0, 0
$017E	$00F0			MOVWF	STACK_0
$017F	$0854			MOVF	itoa_len_L0+1, 0
$0180	$00F1			MOVWF	STACK_0+1
$0181	$2308			CALL	_div_16x16_s
$0182	$0870			MOVF	STACK_0, 0
$0183	$00D3			MOVWF	itoa_len_L0
$0184	$0871			MOVF	STACK_0+1, 0
$0185	$00D4			MOVWF	itoa_len_L0+1
;depth.c,33 :: 		for(i=0; i<len; i++)
$0186	$01D1			CLRF	itoa_i_L0
$0187	$01D2			CLRF	itoa_i_L0+1
$0188	$	L_itoa_2:
$0188	$3080			MOVLW	128
$0189	$0652			XORWF	itoa_i_L0+1, 0
$018A	$00F0			MOVWF	STACK_0
$018B	$3080			MOVLW	128
$018C	$0654			XORWF	itoa_len_L0+1, 0
$018D	$0270			SUBWF	STACK_0, 0
$018E	$1D03			BTFSS	STATUS, Z
$018F	$2992			GOTO	L_itoa_10
$0190	$0853			MOVF	itoa_len_L0, 0
$0191	$0251			SUBWF	itoa_i_L0, 0
$0192	$	L_itoa_10:
$0192	$1803			BTFSC	STATUS, C
$0193	$29CA			GOTO	L_itoa_3
;depth.c,35 :: 		t = buf[i];
$0194	$0851			MOVF	itoa_i_L0, 0
$0195	$074C			ADDWF	FARG_itoa+0, 0
$0196	$00F4			MOVWF	STACK_4
$0197	$0874			MOVF	STACK_4, 0
$0198	$0084			MOVWF	FSR
$0199	$0800			MOVF	INDF, 0
$019A	$00D5			MOVWF	itoa_t_L0
;depth.c,36 :: 		buf[i] = buf[len-1-i];
$019B	$3001			MOVLW	1
$019C	$0253			SUBWF	itoa_len_L0, 0
$019D	$00F0			MOVWF	STACK_0
$019E	$3000			MOVLW	0
$019F	$1C03			BTFSS	STATUS, C
$01A0	$3F01			ADDLW	1
$01A1	$0254			SUBWF	itoa_len_L0+1, 0
$01A2	$00F1			MOVWF	STACK_0+1
$01A3	$0851			MOVF	itoa_i_L0, 0
$01A4	$02F0			SUBWF	STACK_0, 1
$01A5	$1C03			BTFSS	STATUS, C
$01A6	$03F1			DECF	STACK_0+1, 1
$01A7	$0852			MOVF	itoa_i_L0+1, 0
$01A8	$02F1			SUBWF	STACK_0+1, 1
$01A9	$0870			MOVF	STACK_0, 0
$01AA	$074C			ADDWF	FARG_itoa+0, 0
$01AB	$0084			MOVWF	FSR
$01AC	$0800			MOVF	INDF, 0
$01AD	$00F0			MOVWF	STACK_0
$01AE	$0874			MOVF	STACK_4, 0
$01AF	$0084			MOVWF	FSR
$01B0	$0870			MOVF	STACK_0, 0
$01B1	$0080			MOVWF	INDF
;depth.c,37 :: 		buf[len-1-i] = t;
$01B2	$3001			MOVLW	1
$01B3	$0253			SUBWF	itoa_len_L0, 0
$01B4	$00F0			MOVWF	STACK_0
$01B5	$3000			MOVLW	0
$01B6	$1C03			BTFSS	STATUS, C
$01B7	$3F01			ADDLW	1
$01B8	$0254			SUBWF	itoa_len_L0+1, 0
$01B9	$00F1			MOVWF	STACK_0+1
$01BA	$0851			MOVF	itoa_i_L0, 0
$01BB	$02F0			SUBWF	STACK_0, 1
$01BC	$1C03			BTFSS	STATUS, C
$01BD	$03F1			DECF	STACK_0+1, 1
$01BE	$0852			MOVF	itoa_i_L0+1, 0
$01BF	$02F1			SUBWF	STACK_0+1, 1
$01C0	$084C			MOVF	FARG_itoa+0, 0
$01C1	$07F0			ADDWF	STACK_0, 1
$01C2	$0870			MOVF	STACK_0, 0
$01C3	$0084			MOVWF	FSR
$01C4	$0855			MOVF	itoa_t_L0, 0
$01C5	$0080			MOVWF	INDF
;depth.c,38 :: 		}
$01C6	$	L_itoa_4:
;depth.c,33 :: 		for(i=0; i<len; i++)
$01C6	$0AD1			INCF	itoa_i_L0, 1
$01C7	$1903			BTFSC	STATUS, Z
$01C8	$0AD2			INCF	itoa_i_L0+1, 1
;depth.c,38 :: 		}
$01C9	$2988			GOTO	L_itoa_2
$01CA	$	L_itoa_3:
;depth.c,39 :: 		}
$01CA	$0008			RETURN
$03F8	$	_strlen:
$03F8	$1303			BCF	STATUS, RP1
$03F9	$1283			BCF	STATUS, RP0
$03FA	$084C			MOVF	FARG_strlen+0, 0
$03FB	$00CD			MOVWF	strlen_cp_L0
$03FC	$	L_strlen_33:
$03FC	$084D			MOVF	strlen_cp_L0, 0
$03FD	$0084			MOVWF	FSR
$03FE	$0ACD			INCF	strlen_cp_L0, 1
$03FF	$0800			MOVF	INDF, 0
$0400	$00F0			MOVWF	STACK_0
$0401	$0870			MOVF	STACK_0, 0
$0402	$1D03			BTFSS	STATUS, Z
$0403	$2BFC			GOTO	L_strlen_33
$0404	$	L_strlen_34:
$0404	$084C			MOVF	FARG_strlen+0, 0
$0405	$024D			SUBWF	strlen_cp_L0, 0
$0406	$00F0			MOVWF	STACK_0
$0407	$3001			MOVLW	1
$0408	$02F0			SUBWF	STACK_0, 1
$0409	$01F1			CLRF	STACK_0+1
$040A	$1C03			BTFSS	STATUS, C
$040B	$03F1			DECF	STACK_0+1, 1
$040C	$0008			RETURN
$041D	$	_Usart_Write:
$041D	$	L_Usart_Write_3:
$041D	$3000			MOVLW	0
$041E	$1303			BCF	STATUS, RP1
$041F	$1683			BSF	STATUS, RP0
$0420	$1898			BTFSC	TXSTA, 1
$0421	$3001			MOVLW	1
$0422	$00F1			MOVWF	STACK_1
$0423	$0871			MOVF	STACK_1, 0
$0424	$3A00			XORLW	0
$0425	$1D03			BTFSS	STATUS, Z
$0426	$2C29			GOTO	L_Usart_Write_4
$0427	$0000			NOP
$0428	$2C1D			GOTO	L_Usart_Write_3
$0429	$	L_Usart_Write_4:
$0429	$1283			BCF	STATUS, RP0
$042A	$084C			MOVF	FARG_Usart_Write+0, 0
$042B	$0099			MOVWF	TXREG
$042C	$0008			RETURN
$0457	$	GlobalInidepth:
$0457	$3000			MOVLW	0
$0458	$1303			BCF	STATUS, RP1
$0459	$1283			BCF	STATUS, RP0
$045A	$00AE			MOVWF	_Vin+0
$045B	$3000			MOVLW	0
$045C	$00AF			MOVWF	_Vin+1
$045D	$3020			MOVLW	32
$045E	$00B0			MOVWF	_Vin+2
$045F	$3081			MOVLW	129
$0460	$00B1			MOVWF	_Vin+3
$0461	$0008			RETURN
$040D	$	_Usart_Init:
$040D	$1303			BCF	STATUS, RP1
$040E	$1683			BSF	STATUS, RP0
$040F	$1698			BSF	TXSTA, 5
$0410	$3090			MOVLW	144
$0411	$1283			BCF	STATUS, RP0
$0412	$0098			MOVWF	RCSTA
$0413	$1683			BSF	STATUS, RP0
$0414	$1787			BSF	TRISC, 7
$0415	$1307			BCF	TRISC, 6
$0416	$	L_Usart_Init_0:
$0416	$1283			BCF	STATUS, RP0
$0417	$1E8C			BTFSS	PIR1, 5
$0418	$2C1C			GOTO	L_Usart_Init_1
$0419	$081A			MOVF	RCREG, 0
$041A	$00D0			MOVWF	Usart_Init_tmp_L0
$041B	$2C16			GOTO	L_Usart_Init_0
$041C	$	L_Usart_Init_1:
$041C	$0008			RETURN
$02C1	$	_main:
;depth.c,41 :: 		void main ()
;depth.c,46 :: 		ADCON1= 0x20;       // CONFIGURE ADC --- AN2
$02C1	$2457			CALL	GlobalInidepth
$02C2	$3020			MOVLW	32
$02C3	$1683			BSF	STATUS, RP0
$02C4	$009F			MOVWF	ADCON1
;depth.c,47 :: 		TRISA = 0xFF;       // MAKE PORTA AS INPUT
$02C5	$30FF			MOVLW	255
$02C6	$0085			MOVWF	TRISA
;depth.c,48 :: 		usart_init(2400);   // initialize the usart
$02C7	$3081			MOVLW	129
$02C8	$0099			MOVWF	SPBRG
$02C9	$1118			BCF	TXSTA, BRGH
$02CA	$240D			CALL	_Usart_Init
;depth.c,50 :: 		do
$02CB	$	L_main_5:
;depth.c,52 :: 		dt=pressure();
$02CB	$23BE			CALL	_pressure
$02CC	$0870			MOVF	STACK_0, 0
$02CD	$00B2			MOVWF	_dt
$02CE	$0871			MOVF	STACK_0+1, 0
$02CF	$00B3			MOVWF	_dt+1
$02D0	$0872			MOVF	STACK_0+2, 0
$02D1	$00B4			MOVWF	_dt+2
$02D2	$0873			MOVF	STACK_0+3, 0
$02D3	$00B5			MOVWF	_dt+3
;depth.c,53 :: 		itoa(buf, dt);
$02D4	$3036			MOVLW	main_buf_L0
$02D5	$00CC			MOVWF	FARG_itoa+0
$02D6	$0870			MOVF	STACK_0, 0
$02D7	$00CD			MOVWF	FARG_itoa+1
$02D8	$0871			MOVF	STACK_0+1, 0
$02D9	$00CE			MOVWF	FARG_itoa+2
$02DA	$0872			MOVF	STACK_0+2, 0
$02DB	$00CF			MOVWF	FARG_itoa+3
$02DC	$0873			MOVF	STACK_0+3, 0
$02DD	$00D0			MOVWF	FARG_itoa+4
$02DE	$2132			CALL	_itoa
;depth.c,54 :: 		buflen=strlen(buf);
$02DF	$3036			MOVLW	main_buf_L0
$02E0	$00CC			MOVWF	FARG_strlen+0
$02E1	$23F8			CALL	_strlen
;depth.c,56 :: 		for(i=buflen-1; i>=0; i--)
$02E2	$3001			MOVLW	1
$02E3	$0270			SUBWF	STACK_0, 0
$02E4	$00CA			MOVWF	main_i_L0
$02E5	$3000			MOVLW	0
$02E6	$1C03			BTFSS	STATUS, C
$02E7	$3F01			ADDLW	1
$02E8	$0271			SUBWF	STACK_0+1, 0
$02E9	$00CB			MOVWF	main_i_L0+1
$02EA	$	L_main_7:
$02EA	$3080			MOVLW	128
$02EB	$064B			XORWF	main_i_L0+1, 0
$02EC	$00F0			MOVWF	STACK_0
$02ED	$3080			MOVLW	128
$02EE	$0270			SUBWF	STACK_0, 0
$02EF	$1D03			BTFSS	STATUS, Z
$02F0	$2AF3			GOTO	L_main_11
$02F1	$3000			MOVLW	0
$02F2	$024A			SUBWF	main_i_L0, 0
$02F3	$	L_main_11:
$02F3	$1C03			BTFSS	STATUS, C
$02F4	$2B00			GOTO	L_main_8
;depth.c,58 :: 		Usart_Write(buf[i]); // write the data
$02F5	$084A			MOVF	main_i_L0, 0
$02F6	$3F36			ADDLW	main_buf_L0
$02F7	$0084			MOVWF	FSR
$02F8	$0800			MOVF	INDF, 0
$02F9	$00CC			MOVWF	FARG_Usart_Write+0
$02FA	$241D			CALL	_Usart_Write
;depth.c,59 :: 		}
$02FB	$	L_main_9:
;depth.c,56 :: 		for(i=buflen-1; i>=0; i--)
$02FB	$3001			MOVLW	1
$02FC	$02CA			SUBWF	main_i_L0, 1
$02FD	$1C03			BTFSS	STATUS, C
$02FE	$03CB			DECF	main_i_L0+1, 1
;depth.c,59 :: 		}
$02FF	$2AEA			GOTO	L_main_7
$0300	$	L_main_8:
;depth.c,60 :: 		Usart_Write(0x0D);
$0300	$300D			MOVLW	13
$0301	$00CC			MOVWF	FARG_Usart_Write+0
$0302	$241D			CALL	_Usart_Write
;depth.c,61 :: 		Usart_Write(0x0A) ;
$0303	$300A			MOVLW	10
$0304	$00CC			MOVWF	FARG_Usart_Write+0
$0305	$241D			CALL	_Usart_Write
;depth.c,63 :: 		} while(1);
$0306	$2ACB			GOTO	L_main_5
;depth.c,64 :: 		}
$0307	$2B07			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		SDIV3232L
$0132		itoa
$01CB		Div_32x32_S
$0265		NRM4032
$02C1		main
$0308		Div_16x16_S
$0362		Adc_Read
$0390		Div_16x16_S_L
$03BE		pressure
$03E4		Longword2Double
$03F8		strlen
$040D		Usart_Init
$041D		Usart_Write
$042D		SETFOV32
$043B		COMFREM
$0449		SETFUN32
$0457		GlobalInidepth
$0462		RES032
$046B		Delay_22us
$0473		FIXSIGN32


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_SDIV3232L:
$0017		LOOPS3232A:
$002D		SADD22LA:
$003A		SOK22LA:
$0053		SADD22L8:
$0060		SOK22L8:
$0063		LOOPS3232B:
$0079		SADD22LB:
$0086		SOK22LB:
$009F		SADD22L16:
$00AC		SOK22L16:
$00AF		LOOPS3232C:
$00C5		SADD22LC:
$00D2		SOK22LC:
$00EB		SADD22L24:
$00F8		SOK22L24:
$00FB		LOOPS3232D:
$0111		SADD22LD:
$011E		SOK22LD:
$0131		SOK22L:
$0132		_itoa:
$0136		L_itoa_0:
$0174		L_itoa_1:
$0188		L_itoa_2:
$0192		L_itoa_10:
$01C6		L_itoa_4:
$01CA		L_itoa_3:
$01CB		_Div_32x32_S:
$01CD		FXD3232S:
$01ED		CA3232S:
$01FA		C3232SX:
$01FF		C3232S:
$0200		C3232S2:
$0202		C3232SOK:
$021B		C3232SX1:
$022C		C3232SX2:
$0232		C3232SX3:
$0238		C3232SX4:
$025F		END_ALL:
$0263		avoid_comfrem:
$0265		_NRM4032:
$026E		NRM4032:
$028E		NORM4032:
$0294		NORM4032A:
$029D		NRMRND4032:
$02B0		JMPRES032:
$02B4		JMPSETFUN32:
$02B8		JMPFIXSIGN32:
$02BC		JMPSETFOV32:
$02BF		NRM4032EEE:
$02C1		_main:
$02CB		L_main_5:
$02EA		L_main_7:
$02F3		L_main_11:
$02FB		L_main_9:
$0300		L_main_8:
$0308		_Div_16x16_S:
$0362		_Adc_Read:
$0378		L_Adc_Read_0:
$037C		L_Adc_Read_1:
$0383		L_Adc_Read_2:
$038A		L_Adc_Read_3:
$0390		_Div_16x16_S_L:
$03BE		_pressure:
$03E4		_Longword2Double:
$03EF		FLO32U32:
$03F8		_strlen:
$03FC		L_strlen_33:
$0404		L_strlen_34:
$040D		_Usart_Init:
$0416		L_Usart_Init_0:
$041C		L_Usart_Init_1:
$041D		_Usart_Write:
$041D		L_Usart_Write_3:
$0429		L_Usart_Write_4:
$042D		_SETFOV32:
$0439		SETFOV32EEE:
$043B		_COMFREM:
$0449		_SETFUN32:
$0455		SETFUN32EEE:
$0457		GlobalInidepth:
$0462		_RES032:
$046B		_Delay_22us:
$0473		_FIXSIGN32:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$000A		PCLATH
$000C		PIR1
$0018		RCSTA
$0019		TXREG
$001A		RCREG
$001E		ADRESH
$001F		ADCON0
$0020		___math_tempb
$0021		___math_tempbD
$0022		_v
$0026		_prs
$002A		_depth
$002E		_Vin
$0032		_dt
$0036		main_buf_L0
$004A		main_i_L0
$004C		FARG_itoa+0
$004C		FARG_strlen+0
$004C		FARG_Usart_Init+0
$004C		FARG_Usart_Write+0
$004D		FARG_itoa+1
$004D		strlen_cp_L0
$0050		Usart_Init_tmp_L0
$0051		itoa_i_L0
$0053		itoa_len_L0
$0055		itoa_t_L0
$0056		FARG_Adc_Read+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0087		TRISC
$0098		TXSTA
$0099		SPBRG
$009E		ADRESL
$009F		ADCON1


