;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 2/12/2011 7:19:14 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$007F	$	_PWM1_Start:
$007F	$1303			BCF	STATUS, RP1
$0080	$1683			BSF	STATUS, RP0
$0081	$1107			BCF	TRISC, 2
$0082	$1283			BCF	STATUS, RP0
$0083	$1512			BSF	T2CON, 2
$0084	$300C			MOVLW	12
$0085	$0497			IORWF	CCP1CON, 1
$0086	$0008			RETURN
$0077	$	_PWM2_Start:
$0077	$1303			BCF	STATUS, RP1
$0078	$1683			BSF	STATUS, RP0
$0079	$1087			BCF	TRISC, 1
$007A	$1283			BCF	STATUS, RP0
$007B	$1512			BSF	T2CON, 2
$007C	$300C			MOVLW	12
$007D	$049D			IORWF	CCP2CON, 1
$007E	$0008			RETURN
$008D	$	_PWM1_Init:
$008D	$1303			BCF	STATUS, RP1
$008E	$1283			BCF	STATUS, RP0
$008F	$0195			CLRF	CCPR1L, 1
$0090	$1217			BCF	CCP1CON, 4
$0091	$1297			BCF	CCP1CON, 5
$0092	$0008			RETURN
$0087	$	_PWM2_Init:
$0087	$1303			BCF	STATUS, RP1
$0088	$1283			BCF	STATUS, RP0
$0089	$019B			CLRF	CCPR2L, 1
$008A	$121D			BCF	CCP2CON, 4
$008B	$129D			BCF	CCP2CON, 5
$008C	$0008			RETURN
$0055	$	_initRobot:
;led_array_check.c,1 :: 		void initRobot()
;led_array_check.c,4 :: 		ADCON1 =0x06; //TURN OFF ADC
$0055	$3006			MOVLW	6
$0056	$1303			BCF	STATUS, RP1
$0057	$1683			BSF	STATUS, RP0
$0058	$009F			MOVWF	ADCON1
;led_array_check.c,5 :: 		PORTA=0;
$0059	$1283			BCF	STATUS, RP0
$005A	$0185			CLRF	PORTA, 1
;led_array_check.c,6 :: 		PORTE=0;
$005B	$0189			CLRF	PORTE, 1
;led_array_check.c,7 :: 		TRISA=0x3F;
$005C	$303F			MOVLW	63
$005D	$1683			BSF	STATUS, RP0
$005E	$0085			MOVWF	TRISA
;led_array_check.c,8 :: 		TRISE=0x03;
$005F	$3003			MOVLW	3
$0060	$0089			MOVWF	TRISE
;led_array_check.c,9 :: 		TRISB=0xFF;
$0061	$30FF			MOVLW	255
$0062	$0086			MOVWF	TRISB
;led_array_check.c,10 :: 		TRISD=0X00;
$0063	$0188			CLRF	TRISD, 1
;led_array_check.c,11 :: 		TRISC = 0b00000000;
$0064	$0187			CLRF	TRISC, 1
;led_array_check.c,12 :: 		PORTC = 0b10100000;
$0065	$30A0			MOVLW	160
$0066	$1283			BCF	STATUS, RP0
$0067	$0087			MOVWF	PORTC
;led_array_check.c,13 :: 		PWM1_Init(5000);
$0068	$1012			BCF	T2CON, T2CKPS0
$0069	$1092			BCF	T2CON, T2CKPS1
$006A	$30C7			MOVLW	199
$006B	$1683			BSF	STATUS, RP0
$006C	$0092			MOVWF	PR2
$006D	$208D			CALL	_PWM1_Init
;led_array_check.c,14 :: 		PWM2_Init(5000);
$006E	$1012			BCF	T2CON, T2CKPS0
$006F	$1092			BCF	T2CON, T2CKPS1
$0070	$30C7			MOVLW	199
$0071	$1683			BSF	STATUS, RP0
$0072	$0092			MOVWF	PR2
$0073	$2087			CALL	_PWM2_Init
;led_array_check.c,15 :: 		Pwm1_Start();
$0074	$207F			CALL	_PWM1_Start
;led_array_check.c,16 :: 		Pwm2_Start();
$0075	$2077			CALL	_PWM2_Start
;led_array_check.c,17 :: 		}
$0076	$0008			RETURN
$0004	$	_main:
;led_array_check.c,27 :: 		void main()
;led_array_check.c,29 :: 		initRobot();
$0004	$2055			CALL	_initRobot
;led_array_check.c,30 :: 		while(1)
$0005	$	L_main_0:
;led_array_check.c,32 :: 		PORTD.F0=PORTA.F0;
$0005	$3001			MOVLW	1
$0006	$0505			ANDWF	PORTA, 0
$0007	$00F0			MOVWF	STACK_0
$0008	$3000			MOVLW	0
$0009	$1870			BTFSC	STACK_0, 0
$000A	$3001			MOVLW	1
$000B	$0608			XORWF	PORTD, 0
$000C	$3901			ANDLW	1
$000D	$0688			XORWF	PORTD, 1
;led_array_check.c,33 :: 		PORTD.F1=PORTA.F1;
$000E	$3000			MOVLW	0
$000F	$1885			BTFSC	PORTA, 1
$0010	$3001			MOVLW	1
$0011	$00F1			MOVWF	STACK_1
$0012	$3000			MOVLW	0
$0013	$1871			BTFSC	STACK_1, 0
$0014	$3002			MOVLW	2
$0015	$0608			XORWF	PORTD, 0
$0016	$3902			ANDLW	2
$0017	$0688			XORWF	PORTD, 1
;led_array_check.c,34 :: 		PORTD.F2=PORTA.F2;
$0018	$3000			MOVLW	0
$0019	$1905			BTFSC	PORTA, 2
$001A	$3001			MOVLW	1
$001B	$00F1			MOVWF	STACK_1
$001C	$3000			MOVLW	0
$001D	$1871			BTFSC	STACK_1, 0
$001E	$3004			MOVLW	4
$001F	$0608			XORWF	PORTD, 0
$0020	$3904			ANDLW	4
$0021	$0688			XORWF	PORTD, 1
;led_array_check.c,35 :: 		PORTD.F3=PORTA.F3;
$0022	$3000			MOVLW	0
$0023	$1985			BTFSC	PORTA, 3
$0024	$3001			MOVLW	1
$0025	$00F1			MOVWF	STACK_1
$0026	$3000			MOVLW	0
$0027	$1871			BTFSC	STACK_1, 0
$0028	$3008			MOVLW	8
$0029	$0608			XORWF	PORTD, 0
$002A	$3908			ANDLW	8
$002B	$0688			XORWF	PORTD, 1
;led_array_check.c,36 :: 		PORTD.F4=PORTA.F4;
$002C	$3000			MOVLW	0
$002D	$1A05			BTFSC	PORTA, 4
$002E	$3001			MOVLW	1
$002F	$00F1			MOVWF	STACK_1
$0030	$3000			MOVLW	0
$0031	$1871			BTFSC	STACK_1, 0
$0032	$3010			MOVLW	16
$0033	$0608			XORWF	PORTD, 0
$0034	$3910			ANDLW	16
$0035	$0688			XORWF	PORTD, 1
;led_array_check.c,37 :: 		PORTD.F5=PORTA.F5;
$0036	$3000			MOVLW	0
$0037	$1A85			BTFSC	PORTA, 5
$0038	$3001			MOVLW	1
$0039	$00F1			MOVWF	STACK_1
$003A	$3000			MOVLW	0
$003B	$1871			BTFSC	STACK_1, 0
$003C	$3020			MOVLW	32
$003D	$0608			XORWF	PORTD, 0
$003E	$3920			ANDLW	32
$003F	$0688			XORWF	PORTD, 1
;led_array_check.c,38 :: 		PORTD.F6=PORTE.F0;
$0040	$3001			MOVLW	1
$0041	$0509			ANDWF	PORTE, 0
$0042	$00F0			MOVWF	STACK_0
$0043	$3000			MOVLW	0
$0044	$1870			BTFSC	STACK_0, 0
$0045	$3040			MOVLW	64
$0046	$0608			XORWF	PORTD, 0
$0047	$3940			ANDLW	64
$0048	$0688			XORWF	PORTD, 1
;led_array_check.c,39 :: 		PORTD.F7=PORTE.F1;
$0049	$3000			MOVLW	0
$004A	$1889			BTFSC	PORTE, 1
$004B	$3001			MOVLW	1
$004C	$00F1			MOVWF	STACK_1
$004D	$3000			MOVLW	0
$004E	$1871			BTFSC	STACK_1, 0
$004F	$3080			MOVLW	128
$0050	$0608			XORWF	PORTD, 0
$0051	$3980			ANDLW	128
$0052	$0688			XORWF	PORTD, 1
;led_array_check.c,83 :: 		} //end main loop
$0053	$2805			GOTO	L_main_0
;led_array_check.c,84 :: 		} //end main()
$0054	$2854			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main
$0055		initRobot
$0077		PWM2_Start
$007F		PWM1_Start
$0087		PWM2_Init
$008D		PWM1_Init


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$0005		L_main_0:
$0055		_initRobot:
$0077		_PWM2_Start:
$007F		_PWM1_Start:
$0087		_PWM2_Init:
$008D		_PWM1_Init:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0007		PORTC
$0008		PORTD
$0009		PORTE
$000A		PCLATH
$0012		T2CON
$0015		CCPR1L
$0017		CCP1CON
$001B		CCPR2L
$001D		CCP2CON
$0020		FARG_PWM1_Init+0
$0020		FARG_PWM2_Init+0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$0087		TRISC
$0088		TRISD
$0089		TRISE
$0092		PR2
$009F		ADCON1


