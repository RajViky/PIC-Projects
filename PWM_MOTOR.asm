;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 1/30/2011 5:10:17 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$029A	$	_PWM1_Start:
$029A	$1303			BCF	STATUS, RP1
$029B	$1683			BSF	STATUS, RP0
$029C	$1107			BCF	TRISC, 2
$029D	$1283			BCF	STATUS, RP0
$029E	$1512			BSF	T2CON, 2
$029F	$300C			MOVLW	12
$02A0	$0497			IORWF	CCP1CON, 1
$02A1	$0008			RETURN
$0292	$	_PWM2_Start:
$0292	$1303			BCF	STATUS, RP1
$0293	$1683			BSF	STATUS, RP0
$0294	$1087			BCF	TRISC, 1
$0295	$1283			BCF	STATUS, RP0
$0296	$1512			BSF	T2CON, 2
$0297	$300C			MOVLW	12
$0298	$049D			IORWF	CCP2CON, 1
$0299	$0008			RETURN
$02AF	$	_PWM1_Init:
$02AF	$1303			BCF	STATUS, RP1
$02B0	$1283			BCF	STATUS, RP0
$02B1	$0195			CLRF	CCPR1L, 1
$02B2	$1217			BCF	CCP1CON, 4
$02B3	$1297			BCF	CCP1CON, 5
$02B4	$0008			RETURN
$02A9	$	_PWM2_Init:
$02A9	$1303			BCF	STATUS, RP1
$02AA	$1283			BCF	STATUS, RP0
$02AB	$019B			CLRF	CCPR2L, 1
$02AC	$121D			BCF	CCP2CON, 4
$02AD	$129D			BCF	CCP2CON, 5
$02AE	$0008			RETURN
$0282	$	_Usart_Init:
$0282	$1303			BCF	STATUS, RP1
$0283	$1683			BSF	STATUS, RP0
$0284	$1698			BSF	TXSTA, 5
$0285	$3090			MOVLW	144
$0286	$1283			BCF	STATUS, RP0
$0287	$0098			MOVWF	RCSTA
$0288	$1683			BSF	STATUS, RP0
$0289	$1787			BSF	TRISC, 7
$028A	$1307			BCF	TRISC, 6
$028B	$	L_Usart_Init_0:
$028B	$1283			BCF	STATUS, RP0
$028C	$1E8C			BTFSS	PIR1, 5
$028D	$2A91			GOTO	L_Usart_Init_1
$028E	$081A			MOVF	RCREG, 0
$028F	$00AB			MOVWF	Usart_Init_tmp_L0
$0290	$2A8B			GOTO	L_Usart_Init_0
$0291	$	L_Usart_Init_1:
$0291	$0008			RETURN
$02A2	$	_Delay_22us:
;delays.c,15 :: 		void Delay_22us() {
;delays.c,16 :: 		Delay_us(22);
$02A2	$3007			MOVLW	7
$02A3	$1303			BCF	STATUS, RP1
$02A4	$1283			BCF	STATUS, RP0
$02A5	$00FA			MOVWF	STACK_10
$02A6	$0BFA			DECFSZ	STACK_10, F
$02A7	$2AA6			GOTO	$-1
;delays.c,17 :: 		}
$02A8	$0008			RETURN
$017B	$	_Mul_16x16_S:
$017B	$1303			BCF	STATUS, RP1
$017C	$1283			BCF	STATUS, RP0
$017D	$01FB			CLRF	STACK_11
$017E	$01FA			CLRF	STACK_10
$017F	$01F9			CLRF	STACK_9
$0180	$3080			MOVLW	128
$0181	$00F8			MOVWF	STACK_8
$0182	$01FD			CLRF	STACK_13
$0183	$1FF1			BTFSS	STACK_1, 7
$0184	$298B			GOTO	$+7
$0185	$09F1			COMF	STACK_1, F
$0186	$09F0			COMF	STACK_0, F
$0187	$0AF0			INCF	STACK_0, F
$0188	$1903			BTFSC	STATUS, Z
$0189	$0AF1			INCF	STACK_1, F
$018A	$0AFD			INCF	STACK_13, F
$018B	$1FF5			BTFSS	STACK_5, 7
$018C	$2993			GOTO	$+7
$018D	$09F5			COMF	STACK_5, F
$018E	$09F4			COMF	STACK_4, F
$018F	$0AF4			INCF	STACK_4, F
$0190	$1903			BTFSC	STATUS, Z
$0191	$0AF5			INCF	STACK_5, F
$0192	$0AFD			INCF	STACK_13, F
$0193	$0CF1			RRF	STACK_1, F
$0194	$0CF0			RRF	STACK_0, F
$0195	$1C03			BTFSS	STATUS, C
$0196	$29A0			GOTO	$+10
$0197	$0874			MOVF	STACK_4, W
$0198	$07F9			ADDWF	STACK_9, F
$0199	$0875			MOVF	STACK_5, W
$019A	$1803			BTFSC	STATUS, C
$019B	$0F75			INCFSZ	STACK_5, W
$019C	$07FA			ADDWF	STACK_10, F
$019D	$1803			BTFSC	STATUS, C
$019E	$0AFB			INCF	STACK_11, F
$019F	$1003			BCF	STATUS, C
$01A0	$1FF0			BTFSS	STACK_0, 7
$01A1	$29A8			GOTO	$+7
$01A2	$0874			MOVF	STACK_4, W
$01A3	$07FA			ADDWF	STACK_10, F
$01A4	$1803			BTFSC	STATUS, C
$01A5	$0AFB			INCF	STACK_11, F
$01A6	$0875			MOVF	STACK_5, W
$01A7	$07FB			ADDWF	STACK_11, F
$01A8	$0CFB			RRF	STACK_11, F
$01A9	$0CFA			RRF	STACK_10, F
$01AA	$0CF9			RRF	STACK_9, F
$01AB	$0CF8			RRF	STACK_8, F
$01AC	$1C03			BTFSS	STATUS, C
$01AD	$2993			GOTO	$-26
$01AE	$1C7D			BTFSS	STACK_13, 0
$01AF	$29BB			GOTO	$+12
$01B0	$09FB			COMF	STACK_11, F
$01B1	$09FA			COMF	STACK_10, F
$01B2	$09F9			COMF	STACK_9, F
$01B3	$09F8			COMF	STACK_8, F
$01B4	$0AF8			INCF	STACK_8, F
$01B5	$1903			BTFSC	STATUS, Z
$01B6	$0AF9			INCF	STACK_9, F
$01B7	$1903			BTFSC	STATUS, Z
$01B8	$0AFA			INCF	STACK_10, F
$01B9	$1903			BTFSC	STATUS, Z
$01BA	$0AFB			INCF	STACK_11, F
$01BB	$087B			MOVF	STACK_11, W
$01BC	$00F3			MOVWF	STACK_3
$01BD	$087A			MOVF	STACK_10, W
$01BE	$00F2			MOVWF	STACK_2
$01BF	$0879			MOVF	STACK_9, W
$01C0	$00F1			MOVWF	STACK_1
$01C1	$0878			MOVF	STACK_8, W
$01C2	$00F0			MOVWF	STACK_0
$01C3	$0000			NOP
$01C4	$0008			RETURN
$0265	$	_initRobot:
;PWM_MOTOR.c,3 :: 		void initRobot()
;PWM_MOTOR.c,6 :: 		TRISC = 0b00000000;
$0265	$1303			BCF	STATUS, RP1
$0266	$1683			BSF	STATUS, RP0
$0267	$0187			CLRF	TRISC, 1
;PWM_MOTOR.c,7 :: 		PORTC = 0b00000000;
$0268	$1283			BCF	STATUS, RP0
$0269	$0187			CLRF	PORTC, 1
;PWM_MOTOR.c,8 :: 		PWM1_Init(5000);
$026A	$1012			BCF	T2CON, T2CKPS0
$026B	$1092			BCF	T2CON, T2CKPS1
$026C	$30C7			MOVLW	199
$026D	$1683			BSF	STATUS, RP0
$026E	$0092			MOVWF	PR2
$026F	$22AF			CALL	_PWM1_Init
;PWM_MOTOR.c,9 :: 		PWM2_Init(5000);
$0270	$1012			BCF	T2CON, T2CKPS0
$0271	$1092			BCF	T2CON, T2CKPS1
$0272	$30C7			MOVLW	199
$0273	$1683			BSF	STATUS, RP0
$0274	$0092			MOVWF	PR2
$0275	$22A9			CALL	_PWM2_Init
;PWM_MOTOR.c,10 :: 		Pwm1_Start();
$0276	$229A			CALL	_PWM1_Start
;PWM_MOTOR.c,11 :: 		Pwm2_Start();
$0277	$2292			CALL	_PWM2_Start
;PWM_MOTOR.c,14 :: 		ADCON1 = 0x80;  // Configure analog inputs and Vref
$0278	$3080			MOVLW	128
$0279	$1683			BSF	STATUS, RP0
$027A	$009F			MOVWF	ADCON1
;PWM_MOTOR.c,15 :: 		TRISA  = 0xFF;  // PORTA is input
$027B	$30FF			MOVLW	255
$027C	$0085			MOVWF	TRISA
;PWM_MOTOR.c,18 :: 		Usart_Init(9600);
$027D	$3019			MOVLW	25
$027E	$0099			MOVWF	SPBRG
$027F	$1518			BSF	TXSTA, BRGH
$0280	$2282			CALL	_Usart_Init
;PWM_MOTOR.c,20 :: 		}
$0281	$0008			RETURN
$0237	$	_Adc_Read:
$0237	$1303			BCF	STATUS, RP1
$0238	$1283			BCF	STATUS, RP0
$0239	$019F			CLRF	ADCON0, 1
$023A	$30C0			MOVLW	192
$023B	$049F			IORWF	ADCON0, 1
$023C	$1683			BSF	STATUS, RP0
$023D	$171F			BSF	ADCON1, 6
$023E	$179F			BSF	ADCON1, 7
$023F	$1283			BCF	STATUS, RP0
$0240	$0826			MOVF	FARG_Adc_Read+0, 0
$0241	$00F0			MOVWF	STACK_0
$0242	$0DF0			RLF	STACK_0, 1
$0243	$1070			BCF	STACK_0, 0
$0244	$0DF0			RLF	STACK_0, 1
$0245	$1070			BCF	STACK_0, 0
$0246	$0DF0			RLF	STACK_0, 1
$0247	$1070			BCF	STACK_0, 0
$0248	$0870			MOVF	STACK_0, 0
$0249	$049F			IORWF	ADCON0, 1
$024A	$141F			BSF	ADCON0, 0
$024B	$22A2			CALL	_Delay_22us
$024C	$151F			BSF	ADCON0, 2
$024D	$	L_Adc_Read_0:
$024D	$1D1F			BTFSS	ADCON0, 2
$024E	$2A51			GOTO	L_Adc_Read_1
$024F	$0000			NOP
$0250	$2A4D			GOTO	L_Adc_Read_0
$0251	$	L_Adc_Read_1:
$0251	$101F			BCF	ADCON0, 0
$0252	$3008			MOVLW	8
$0253	$00F2			MOVWF	STACK_2
$0254	$081E			MOVF	ADRESH, 0
$0255	$00F0			MOVWF	STACK_0
$0256	$01F1			CLRF	STACK_0+1
$0257	$0872			MOVF	STACK_2, 0
$0258	$	L_Adc_Read_2:
$0258	$1903			BTFSC	STATUS, Z
$0259	$2A5F			GOTO	L_Adc_Read_3
$025A	$0DF0			RLF	STACK_0, 1
$025B	$0DF1			RLF	STACK_0+1, 1
$025C	$1070			BCF	STACK_0, 0
$025D	$3FFF			ADDLW	255
$025E	$2A58			GOTO	L_Adc_Read_2
$025F	$	L_Adc_Read_3:
$025F	$1683			BSF	STATUS, RP0
$0260	$081E			MOVF	ADRESL, 0
$0261	$04F0			IORWF	STACK_0, 1
$0262	$3000			MOVLW	0
$0263	$04F1			IORWF	STACK_0+1, 1
$0264	$0008			RETURN
$01C5	$	_PWM1_Change_Duty:
$01C5	$1303			BCF	STATUS, RP1
$01C6	$1683			BSF	STATUS, RP0
$01C7	$0812			MOVF	PR2, 0
$01C8	$3F01			ADDLW	1
$01C9	$00F0			MOVWF	STACK_0
$01CA	$01F1			CLRF	STACK_0+1
$01CB	$1803			BTFSC	STATUS, C
$01CC	$0AF1			INCF	STACK_0+1, 1
$01CD	$1283			BCF	STATUS, RP0
$01CE	$0826			MOVF	FARG_PWM1_Change_Duty+0, 0
$01CF	$00F4			MOVWF	STACK_4
$01D0	$01F5			CLRF	STACK_4+1
$01D1	$217B			CALL	_mul_16x16_s
$01D2	$3006			MOVLW	6
$01D3	$00F2			MOVWF	STACK_2
$01D4	$0870			MOVF	STACK_0, 0
$01D5	$00F4			MOVWF	STACK_4
$01D6	$0871			MOVF	STACK_0+1, 0
$01D7	$00F5			MOVWF	STACK_4+1
$01D8	$0872			MOVF	STACK_2, 0
$01D9	$	L_PWM1_Change_Duty_2:
$01D9	$1903			BTFSC	STATUS, Z
$01DA	$29E0			GOTO	L_PWM1_Change_Duty_3
$01DB	$0CF5			RRF	STACK_4+1, 1
$01DC	$0CF4			RRF	STACK_4, 1
$01DD	$13F5			BCF	STACK_4+1, 7
$01DE	$3FFF			ADDLW	255
$01DF	$29D9			GOTO	L_PWM1_Change_Duty_2
$01E0	$	L_PWM1_Change_Duty_3:
$01E0	$0874			MOVF	STACK_4, 0
$01E1	$00F0			MOVWF	STACK_0
$01E2	$0DF0			RLF	STACK_0, 1
$01E3	$1070			BCF	STACK_0, 0
$01E4	$0DF0			RLF	STACK_0, 1
$01E5	$1070			BCF	STACK_0, 0
$01E6	$0DF0			RLF	STACK_0, 1
$01E7	$1070			BCF	STACK_0, 0
$01E8	$0DF0			RLF	STACK_0, 1
$01E9	$1070			BCF	STACK_0, 0
$01EA	$3030			MOVLW	48
$01EB	$0570			ANDWF	STACK_0, 0
$01EC	$00F3			MOVWF	STACK_3
$01ED	$0874			MOVF	STACK_4, 0
$01EE	$00F0			MOVWF	STACK_0
$01EF	$0875			MOVF	STACK_4+1, 0
$01F0	$00F1			MOVWF	STACK_0+1
$01F1	$0CF1			RRF	STACK_0+1, 1
$01F2	$0CF0			RRF	STACK_0, 1
$01F3	$13F1			BCF	STACK_0+1, 7
$01F4	$0CF1			RRF	STACK_0+1, 1
$01F5	$0CF0			RRF	STACK_0, 1
$01F6	$13F1			BCF	STACK_0+1, 7
$01F7	$0870			MOVF	STACK_0, 0
$01F8	$0095			MOVWF	CCPR1L
$01F9	$300F			MOVLW	15
$01FA	$0597			ANDWF	CCP1CON, 1
$01FB	$0873			MOVF	STACK_3, 0
$01FC	$0497			IORWF	CCP1CON, 1
$01FD	$0008			RETURN
$01FE	$	_PWM2_Change_Duty:
$01FE	$1303			BCF	STATUS, RP1
$01FF	$1683			BSF	STATUS, RP0
$0200	$0812			MOVF	PR2, 0
$0201	$3F01			ADDLW	1
$0202	$00F0			MOVWF	STACK_0
$0203	$01F1			CLRF	STACK_0+1
$0204	$1803			BTFSC	STATUS, C
$0205	$0AF1			INCF	STACK_0+1, 1
$0206	$1283			BCF	STATUS, RP0
$0207	$0826			MOVF	FARG_PWM2_Change_Duty+0, 0
$0208	$00F4			MOVWF	STACK_4
$0209	$01F5			CLRF	STACK_4+1
$020A	$217B			CALL	_mul_16x16_s
$020B	$3006			MOVLW	6
$020C	$00F2			MOVWF	STACK_2
$020D	$0870			MOVF	STACK_0, 0
$020E	$00F4			MOVWF	STACK_4
$020F	$0871			MOVF	STACK_0+1, 0
$0210	$00F5			MOVWF	STACK_4+1
$0211	$0872			MOVF	STACK_2, 0
$0212	$	L_PWM2_Change_Duty_0:
$0212	$1903			BTFSC	STATUS, Z
$0213	$2A19			GOTO	L_PWM2_Change_Duty_1
$0214	$0CF5			RRF	STACK_4+1, 1
$0215	$0CF4			RRF	STACK_4, 1
$0216	$13F5			BCF	STACK_4+1, 7
$0217	$3FFF			ADDLW	255
$0218	$2A12			GOTO	L_PWM2_Change_Duty_0
$0219	$	L_PWM2_Change_Duty_1:
$0219	$0874			MOVF	STACK_4, 0
$021A	$00F0			MOVWF	STACK_0
$021B	$0DF0			RLF	STACK_0, 1
$021C	$1070			BCF	STACK_0, 0
$021D	$0DF0			RLF	STACK_0, 1
$021E	$1070			BCF	STACK_0, 0
$021F	$0DF0			RLF	STACK_0, 1
$0220	$1070			BCF	STACK_0, 0
$0221	$0DF0			RLF	STACK_0, 1
$0222	$1070			BCF	STACK_0, 0
$0223	$3030			MOVLW	48
$0224	$0570			ANDWF	STACK_0, 0
$0225	$00F3			MOVWF	STACK_3
$0226	$0874			MOVF	STACK_4, 0
$0227	$00F0			MOVWF	STACK_0
$0228	$0875			MOVF	STACK_4+1, 0
$0229	$00F1			MOVWF	STACK_0+1
$022A	$0CF1			RRF	STACK_0+1, 1
$022B	$0CF0			RRF	STACK_0, 1
$022C	$13F1			BCF	STACK_0+1, 7
$022D	$0CF1			RRF	STACK_0+1, 1
$022E	$0CF0			RRF	STACK_0, 1
$022F	$13F1			BCF	STACK_0+1, 7
$0230	$0870			MOVF	STACK_0, 0
$0231	$009B			MOVWF	CCPR2L
$0232	$300F			MOVLW	15
$0233	$059D			ANDWF	CCP2CON, 1
$0234	$0873			MOVF	STACK_3, 0
$0235	$049D			IORWF	CCP2CON, 1
$0236	$0008			RETURN
$0004	$	_main:
;PWM_MOTOR.c,31 :: 		void main()
;PWM_MOTOR.c,33 :: 		initRobot();
$0004	$2265			CALL	_initRobot
;PWM_MOTOR.c,34 :: 		while(1)
$0005	$	L_main_0:
;PWM_MOTOR.c,37 :: 		line_R = Adc_Read(5);
$0005	$3005			MOVLW	5
$0006	$00A6			MOVWF	FARG_Adc_Read+0
$0007	$2237			CALL	_Adc_Read
$0008	$0870			MOVF	STACK_0, 0
$0009	$1283			BCF	STATUS, RP0
$000A	$00A0			MOVWF	_line_R
$000B	$0871			MOVF	STACK_0+1, 0
$000C	$00A1			MOVWF	_line_R+1
;PWM_MOTOR.c,38 :: 		line_C = Adc_Read(6);
$000D	$3006			MOVLW	6
$000E	$00A6			MOVWF	FARG_Adc_Read+0
$000F	$2237			CALL	_Adc_Read
$0010	$0870			MOVF	STACK_0, 0
$0011	$1283			BCF	STATUS, RP0
$0012	$00A2			MOVWF	_line_C
$0013	$0871			MOVF	STACK_0+1, 0
$0014	$00A3			MOVWF	_line_C+1
;PWM_MOTOR.c,39 :: 		line_L = Adc_Read(7);
$0015	$3007			MOVLW	7
$0016	$00A6			MOVWF	FARG_Adc_Read+0
$0017	$2237			CALL	_Adc_Read
$0018	$0870			MOVF	STACK_0, 0
$0019	$1283			BCF	STATUS, RP0
$001A	$00A4			MOVWF	_line_L
$001B	$0871			MOVF	STACK_0+1, 0
$001C	$00A5			MOVWF	_line_L+1
;PWM_MOTOR.c,41 :: 		if(line_L<512 & line_C>512 & line_R<512)
$001D	$3002			MOVLW	2
$001E	$0271			SUBWF	STACK_0+1, 0
$001F	$1D03			BTFSS	STATUS, Z
$0020	$2823			GOTO	L_main_8
$0021	$3000			MOVLW	0
$0022	$0270			SUBWF	STACK_0, 0
$0023	$	L_main_8:
$0023	$3001			MOVLW	1
$0024	$1803			BTFSC	STATUS, C
$0025	$3000			MOVLW	0
$0026	$00F2			MOVWF	STACK_2
$0027	$0823			MOVF	_line_C+1, 0
$0028	$3C02			SUBLW	2
$0029	$1D03			BTFSS	STATUS, Z
$002A	$282D			GOTO	L_main_9
$002B	$0822			MOVF	_line_C, 0
$002C	$3C00			SUBLW	0
$002D	$	L_main_9:
$002D	$3001			MOVLW	1
$002E	$1803			BTFSC	STATUS, C
$002F	$3000			MOVLW	0
$0030	$00F0			MOVWF	STACK_0
$0031	$0870			MOVF	STACK_0, 0
$0032	$05F2			ANDWF	STACK_2, 1
$0033	$3002			MOVLW	2
$0034	$0221			SUBWF	_line_R+1, 0
$0035	$1D03			BTFSS	STATUS, Z
$0036	$2839			GOTO	L_main_10
$0037	$3000			MOVLW	0
$0038	$0220			SUBWF	_line_R, 0
$0039	$	L_main_10:
$0039	$3001			MOVLW	1
$003A	$1803			BTFSC	STATUS, C
$003B	$3000			MOVLW	0
$003C	$00F0			MOVWF	STACK_0
$003D	$0872			MOVF	STACK_2, 0
$003E	$05F0			ANDWF	STACK_0, 1
$003F	$1903			BTFSC	STATUS, Z
$0040	$2857			GOTO	L_main_2
;PWM_MOTOR.c,44 :: 		PWM1_Change_Duty(190);
$0041	$30BE			MOVLW	190
$0042	$00A6			MOVWF	FARG_PWM1_Change_Duty+0
$0043	$21C5			CALL	_PWM1_Change_Duty
;PWM_MOTOR.c,45 :: 		PWM2_Change_Duty(190);
$0044	$30BE			MOVLW	190
$0045	$00A6			MOVWF	FARG_PWM2_Change_Duty+0
$0046	$21FE			CALL	_PWM2_Change_Duty
;PWM_MOTOR.c,46 :: 		Delay_ms(5);
$0047	$3007			MOVLW	7
$0048	$00FB			MOVWF	STACK_11
$0049	$30FF			MOVLW	255
$004A	$00FA			MOVWF	STACK_10
$004B	$0BFB			DECFSZ	STACK_11, F
$004C	$284E			GOTO	$+2
$004D	$2851			GOTO	$+4
$004E	$0BFA			DECFSZ	STACK_10, F
$004F	$284E			GOTO	$-1
$0050	$284B			GOTO	$-5
$0051	$3078			MOVLW	120
$0052	$00FA			MOVWF	STACK_10
$0053	$0BFA			DECFSZ	STACK_10, F
$0054	$2853			GOTO	$-1
$0055	$0000			NOP
$0056	$0000			NOP
;PWM_MOTOR.c,47 :: 		}
$0057	$	L_main_2:
;PWM_MOTOR.c,48 :: 		if(line_L<512 & line_C>512 & line_R>512)
$0057	$3002			MOVLW	2
$0058	$0225			SUBWF	_line_L+1, 0
$0059	$1D03			BTFSS	STATUS, Z
$005A	$285D			GOTO	L_main_11
$005B	$3000			MOVLW	0
$005C	$0224			SUBWF	_line_L, 0
$005D	$	L_main_11:
$005D	$3001			MOVLW	1
$005E	$1803			BTFSC	STATUS, C
$005F	$3000			MOVLW	0
$0060	$00F2			MOVWF	STACK_2
$0061	$0823			MOVF	_line_C+1, 0
$0062	$3C02			SUBLW	2
$0063	$1D03			BTFSS	STATUS, Z
$0064	$2867			GOTO	L_main_12
$0065	$0822			MOVF	_line_C, 0
$0066	$3C00			SUBLW	0
$0067	$	L_main_12:
$0067	$3001			MOVLW	1
$0068	$1803			BTFSC	STATUS, C
$0069	$3000			MOVLW	0
$006A	$00F0			MOVWF	STACK_0
$006B	$0870			MOVF	STACK_0, 0
$006C	$05F2			ANDWF	STACK_2, 1
$006D	$0821			MOVF	_line_R+1, 0
$006E	$3C02			SUBLW	2
$006F	$1D03			BTFSS	STATUS, Z
$0070	$2873			GOTO	L_main_13
$0071	$0820			MOVF	_line_R, 0
$0072	$3C00			SUBLW	0
$0073	$	L_main_13:
$0073	$3001			MOVLW	1
$0074	$1803			BTFSC	STATUS, C
$0075	$3000			MOVLW	0
$0076	$00F0			MOVWF	STACK_0
$0077	$0872			MOVF	STACK_2, 0
$0078	$05F0			ANDWF	STACK_0, 1
$0079	$1903			BTFSC	STATUS, Z
$007A	$2891			GOTO	L_main_3
;PWM_MOTOR.c,51 :: 		PWM1_Change_Duty(145);
$007B	$3091			MOVLW	145
$007C	$00A6			MOVWF	FARG_PWM1_Change_Duty+0
$007D	$21C5			CALL	_PWM1_Change_Duty
;PWM_MOTOR.c,52 :: 		PWM2_Change_Duty(190);
$007E	$30BE			MOVLW	190
$007F	$00A6			MOVWF	FARG_PWM2_Change_Duty+0
$0080	$21FE			CALL	_PWM2_Change_Duty
;PWM_MOTOR.c,53 :: 		Delay_ms(5);
$0081	$3007			MOVLW	7
$0082	$00FB			MOVWF	STACK_11
$0083	$30FF			MOVLW	255
$0084	$00FA			MOVWF	STACK_10
$0085	$0BFB			DECFSZ	STACK_11, F
$0086	$2888			GOTO	$+2
$0087	$288B			GOTO	$+4
$0088	$0BFA			DECFSZ	STACK_10, F
$0089	$2888			GOTO	$-1
$008A	$2885			GOTO	$-5
$008B	$3078			MOVLW	120
$008C	$00FA			MOVWF	STACK_10
$008D	$0BFA			DECFSZ	STACK_10, F
$008E	$288D			GOTO	$-1
$008F	$0000			NOP
$0090	$0000			NOP
;PWM_MOTOR.c,54 :: 		}
$0091	$	L_main_3:
;PWM_MOTOR.c,55 :: 		if(line_L<512 & line_C<512 & line_R>512)
$0091	$3002			MOVLW	2
$0092	$0225			SUBWF	_line_L+1, 0
$0093	$1D03			BTFSS	STATUS, Z
$0094	$2897			GOTO	L_main_14
$0095	$3000			MOVLW	0
$0096	$0224			SUBWF	_line_L, 0
$0097	$	L_main_14:
$0097	$3001			MOVLW	1
$0098	$1803			BTFSC	STATUS, C
$0099	$3000			MOVLW	0
$009A	$00F2			MOVWF	STACK_2
$009B	$3002			MOVLW	2
$009C	$0223			SUBWF	_line_C+1, 0
$009D	$1D03			BTFSS	STATUS, Z
$009E	$28A1			GOTO	L_main_15
$009F	$3000			MOVLW	0
$00A0	$0222			SUBWF	_line_C, 0
$00A1	$	L_main_15:
$00A1	$3001			MOVLW	1
$00A2	$1803			BTFSC	STATUS, C
$00A3	$3000			MOVLW	0
$00A4	$00F0			MOVWF	STACK_0
$00A5	$0870			MOVF	STACK_0, 0
$00A6	$05F2			ANDWF	STACK_2, 1
$00A7	$0821			MOVF	_line_R+1, 0
$00A8	$3C02			SUBLW	2
$00A9	$1D03			BTFSS	STATUS, Z
$00AA	$28AD			GOTO	L_main_16
$00AB	$0820			MOVF	_line_R, 0
$00AC	$3C00			SUBLW	0
$00AD	$	L_main_16:
$00AD	$3001			MOVLW	1
$00AE	$1803			BTFSC	STATUS, C
$00AF	$3000			MOVLW	0
$00B0	$00F0			MOVWF	STACK_0
$00B1	$0872			MOVF	STACK_2, 0
$00B2	$05F0			ANDWF	STACK_0, 1
$00B3	$1903			BTFSC	STATUS, Z
$00B4	$28CB			GOTO	L_main_4
;PWM_MOTOR.c,58 :: 		PWM1_Change_Duty(135);
$00B5	$3087			MOVLW	135
$00B6	$00A6			MOVWF	FARG_PWM1_Change_Duty+0
$00B7	$21C5			CALL	_PWM1_Change_Duty
;PWM_MOTOR.c,59 :: 		PWM2_Change_Duty(210);
$00B8	$30D2			MOVLW	210
$00B9	$00A6			MOVWF	FARG_PWM2_Change_Duty+0
$00BA	$21FE			CALL	_PWM2_Change_Duty
;PWM_MOTOR.c,60 :: 		Delay_ms(5);
$00BB	$3007			MOVLW	7
$00BC	$00FB			MOVWF	STACK_11
$00BD	$30FF			MOVLW	255
$00BE	$00FA			MOVWF	STACK_10
$00BF	$0BFB			DECFSZ	STACK_11, F
$00C0	$28C2			GOTO	$+2
$00C1	$28C5			GOTO	$+4
$00C2	$0BFA			DECFSZ	STACK_10, F
$00C3	$28C2			GOTO	$-1
$00C4	$28BF			GOTO	$-5
$00C5	$3078			MOVLW	120
$00C6	$00FA			MOVWF	STACK_10
$00C7	$0BFA			DECFSZ	STACK_10, F
$00C8	$28C7			GOTO	$-1
$00C9	$0000			NOP
$00CA	$0000			NOP
;PWM_MOTOR.c,61 :: 		}
$00CB	$	L_main_4:
;PWM_MOTOR.c,62 :: 		if(line_L>512 & line_C>512 & line_R<512)
$00CB	$0825			MOVF	_line_L+1, 0
$00CC	$3C02			SUBLW	2
$00CD	$1D03			BTFSS	STATUS, Z
$00CE	$28D1			GOTO	L_main_17
$00CF	$0824			MOVF	_line_L, 0
$00D0	$3C00			SUBLW	0
$00D1	$	L_main_17:
$00D1	$3001			MOVLW	1
$00D2	$1803			BTFSC	STATUS, C
$00D3	$3000			MOVLW	0
$00D4	$00F2			MOVWF	STACK_2
$00D5	$0823			MOVF	_line_C+1, 0
$00D6	$3C02			SUBLW	2
$00D7	$1D03			BTFSS	STATUS, Z
$00D8	$28DB			GOTO	L_main_18
$00D9	$0822			MOVF	_line_C, 0
$00DA	$3C00			SUBLW	0
$00DB	$	L_main_18:
$00DB	$3001			MOVLW	1
$00DC	$1803			BTFSC	STATUS, C
$00DD	$3000			MOVLW	0
$00DE	$00F0			MOVWF	STACK_0
$00DF	$0870			MOVF	STACK_0, 0
$00E0	$05F2			ANDWF	STACK_2, 1
$00E1	$3002			MOVLW	2
$00E2	$0221			SUBWF	_line_R+1, 0
$00E3	$1D03			BTFSS	STATUS, Z
$00E4	$28E7			GOTO	L_main_19
$00E5	$3000			MOVLW	0
$00E6	$0220			SUBWF	_line_R, 0
$00E7	$	L_main_19:
$00E7	$3001			MOVLW	1
$00E8	$1803			BTFSC	STATUS, C
$00E9	$3000			MOVLW	0
$00EA	$00F0			MOVWF	STACK_0
$00EB	$0872			MOVF	STACK_2, 0
$00EC	$05F0			ANDWF	STACK_0, 1
$00ED	$1903			BTFSC	STATUS, Z
$00EE	$2905			GOTO	L_main_5
;PWM_MOTOR.c,65 :: 		PWM1_Change_Duty(190);
$00EF	$30BE			MOVLW	190
$00F0	$00A6			MOVWF	FARG_PWM1_Change_Duty+0
$00F1	$21C5			CALL	_PWM1_Change_Duty
;PWM_MOTOR.c,66 :: 		PWM2_Change_Duty(145);
$00F2	$3091			MOVLW	145
$00F3	$00A6			MOVWF	FARG_PWM2_Change_Duty+0
$00F4	$21FE			CALL	_PWM2_Change_Duty
;PWM_MOTOR.c,67 :: 		Delay_ms(5);
$00F5	$3007			MOVLW	7
$00F6	$00FB			MOVWF	STACK_11
$00F7	$30FF			MOVLW	255
$00F8	$00FA			MOVWF	STACK_10
$00F9	$0BFB			DECFSZ	STACK_11, F
$00FA	$28FC			GOTO	$+2
$00FB	$28FF			GOTO	$+4
$00FC	$0BFA			DECFSZ	STACK_10, F
$00FD	$28FC			GOTO	$-1
$00FE	$28F9			GOTO	$-5
$00FF	$3078			MOVLW	120
$0100	$00FA			MOVWF	STACK_10
$0101	$0BFA			DECFSZ	STACK_10, F
$0102	$2901			GOTO	$-1
$0103	$0000			NOP
$0104	$0000			NOP
;PWM_MOTOR.c,68 :: 		}
$0105	$	L_main_5:
;PWM_MOTOR.c,69 :: 		if(line_L>512 & line_C<512 & line_R<512)
$0105	$0825			MOVF	_line_L+1, 0
$0106	$3C02			SUBLW	2
$0107	$1D03			BTFSS	STATUS, Z
$0108	$290B			GOTO	L_main_20
$0109	$0824			MOVF	_line_L, 0
$010A	$3C00			SUBLW	0
$010B	$	L_main_20:
$010B	$3001			MOVLW	1
$010C	$1803			BTFSC	STATUS, C
$010D	$3000			MOVLW	0
$010E	$00F2			MOVWF	STACK_2
$010F	$3002			MOVLW	2
$0110	$0223			SUBWF	_line_C+1, 0
$0111	$1D03			BTFSS	STATUS, Z
$0112	$2915			GOTO	L_main_21
$0113	$3000			MOVLW	0
$0114	$0222			SUBWF	_line_C, 0
$0115	$	L_main_21:
$0115	$3001			MOVLW	1
$0116	$1803			BTFSC	STATUS, C
$0117	$3000			MOVLW	0
$0118	$00F0			MOVWF	STACK_0
$0119	$0870			MOVF	STACK_0, 0
$011A	$05F2			ANDWF	STACK_2, 1
$011B	$3002			MOVLW	2
$011C	$0221			SUBWF	_line_R+1, 0
$011D	$1D03			BTFSS	STATUS, Z
$011E	$2921			GOTO	L_main_22
$011F	$3000			MOVLW	0
$0120	$0220			SUBWF	_line_R, 0
$0121	$	L_main_22:
$0121	$3001			MOVLW	1
$0122	$1803			BTFSC	STATUS, C
$0123	$3000			MOVLW	0
$0124	$00F0			MOVWF	STACK_0
$0125	$0872			MOVF	STACK_2, 0
$0126	$05F0			ANDWF	STACK_0, 1
$0127	$1903			BTFSC	STATUS, Z
$0128	$293F			GOTO	L_main_6
;PWM_MOTOR.c,72 :: 		PWM1_Change_Duty(210);
$0129	$30D2			MOVLW	210
$012A	$00A6			MOVWF	FARG_PWM1_Change_Duty+0
$012B	$21C5			CALL	_PWM1_Change_Duty
;PWM_MOTOR.c,73 :: 		PWM2_Change_Duty(135);
$012C	$3087			MOVLW	135
$012D	$00A6			MOVWF	FARG_PWM2_Change_Duty+0
$012E	$21FE			CALL	_PWM2_Change_Duty
;PWM_MOTOR.c,74 :: 		Delay_ms(5);
$012F	$3007			MOVLW	7
$0130	$00FB			MOVWF	STACK_11
$0131	$30FF			MOVLW	255
$0132	$00FA			MOVWF	STACK_10
$0133	$0BFB			DECFSZ	STACK_11, F
$0134	$2936			GOTO	$+2
$0135	$2939			GOTO	$+4
$0136	$0BFA			DECFSZ	STACK_10, F
$0137	$2936			GOTO	$-1
$0138	$2933			GOTO	$-5
$0139	$3078			MOVLW	120
$013A	$00FA			MOVWF	STACK_10
$013B	$0BFA			DECFSZ	STACK_10, F
$013C	$293B			GOTO	$-1
$013D	$0000			NOP
$013E	$0000			NOP
;PWM_MOTOR.c,75 :: 		}
$013F	$	L_main_6:
;PWM_MOTOR.c,76 :: 		if(line_L<512 & line_C<512 & line_R<512)
$013F	$3002			MOVLW	2
$0140	$0225			SUBWF	_line_L+1, 0
$0141	$1D03			BTFSS	STATUS, Z
$0142	$2945			GOTO	L_main_23
$0143	$3000			MOVLW	0
$0144	$0224			SUBWF	_line_L, 0
$0145	$	L_main_23:
$0145	$3001			MOVLW	1
$0146	$1803			BTFSC	STATUS, C
$0147	$3000			MOVLW	0
$0148	$00F2			MOVWF	STACK_2
$0149	$3002			MOVLW	2
$014A	$0223			SUBWF	_line_C+1, 0
$014B	$1D03			BTFSS	STATUS, Z
$014C	$294F			GOTO	L_main_24
$014D	$3000			MOVLW	0
$014E	$0222			SUBWF	_line_C, 0
$014F	$	L_main_24:
$014F	$3001			MOVLW	1
$0150	$1803			BTFSC	STATUS, C
$0151	$3000			MOVLW	0
$0152	$00F0			MOVWF	STACK_0
$0153	$0870			MOVF	STACK_0, 0
$0154	$05F2			ANDWF	STACK_2, 1
$0155	$3002			MOVLW	2
$0156	$0221			SUBWF	_line_R+1, 0
$0157	$1D03			BTFSS	STATUS, Z
$0158	$295B			GOTO	L_main_25
$0159	$3000			MOVLW	0
$015A	$0220			SUBWF	_line_R, 0
$015B	$	L_main_25:
$015B	$3001			MOVLW	1
$015C	$1803			BTFSC	STATUS, C
$015D	$3000			MOVLW	0
$015E	$00F0			MOVWF	STACK_0
$015F	$0872			MOVF	STACK_2, 0
$0160	$05F0			ANDWF	STACK_0, 1
$0161	$1903			BTFSC	STATUS, Z
$0162	$2979			GOTO	L_main_7
;PWM_MOTOR.c,79 :: 		PWM1_Change_Duty(90);
$0163	$305A			MOVLW	90
$0164	$00A6			MOVWF	FARG_PWM1_Change_Duty+0
$0165	$21C5			CALL	_PWM1_Change_Duty
;PWM_MOTOR.c,80 :: 		PWM2_Change_Duty(90);
$0166	$305A			MOVLW	90
$0167	$00A6			MOVWF	FARG_PWM2_Change_Duty+0
$0168	$21FE			CALL	_PWM2_Change_Duty
;PWM_MOTOR.c,81 :: 		Delay_ms(5);
$0169	$3007			MOVLW	7
$016A	$00FB			MOVWF	STACK_11
$016B	$30FF			MOVLW	255
$016C	$00FA			MOVWF	STACK_10
$016D	$0BFB			DECFSZ	STACK_11, F
$016E	$2970			GOTO	$+2
$016F	$2973			GOTO	$+4
$0170	$0BFA			DECFSZ	STACK_10, F
$0171	$2970			GOTO	$-1
$0172	$296D			GOTO	$-5
$0173	$3078			MOVLW	120
$0174	$00FA			MOVWF	STACK_10
$0175	$0BFA			DECFSZ	STACK_10, F
$0176	$2975			GOTO	$-1
$0177	$0000			NOP
$0178	$0000			NOP
;PWM_MOTOR.c,82 :: 		}
$0179	$	L_main_7:
;PWM_MOTOR.c,83 :: 		} //end main loop
$0179	$2805			GOTO	L_main_0
;PWM_MOTOR.c,84 :: 		} //end main()
$017A	$297A			GOTO	$
