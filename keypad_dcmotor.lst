;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 8/9/2010 11:16:18 PM
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0087	$	_Delay_10us:
;delays.c,11 :: 		void Delay_10us() {
;delays.c,12 :: 		Delay_us(10);
$0087	$3003			MOVLW	3
$0088	$1303			BCF	STATUS, RP1
$0089	$1283			BCF	STATUS, RP0
$008A	$00FA			MOVWF	STACK_10
$008B	$0BFA			DECFSZ	STACK_10, F
$008C	$288B			GOTO	$-1
;delays.c,13 :: 		}
$008D	$0008			RETURN
$0041	$	_Keypad_Read:
$0041	$1303			BCF	STATUS, RP1
$0042	$1283			BCF	STATUS, RP0
$0043	$01A4			CLRF	Keypad_Read_rslt_L0, 1
$0044	$3010			MOVLW	16
$0045	$00A6			MOVWF	Keypad_Read_shifter_L0
$0046	$	L_Keypad_Read_0:
$0046	$0826			MOVF	Keypad_Read_shifter_L0, 0
$0047	$3C00			SUBLW	0
$0048	$1803			BTFSC	STATUS, C
$0049	$2874			GOTO	L_Keypad_Read_1
$004A	$0820			MOVF	keypad_16_key_pointer, 0
$004B	$0084			MOVWF	FSR
$004C	$30F0			MOVLW	240
$004D	$0080			MOVWF	INDF
$004E	$3080			MOVLW	128
$004F	$0720			ADDWF	keypad_16_key_pointer, 0
$0050	$00F1			MOVWF	STACK_1
$0051	$0926			COMF	Keypad_Read_shifter_L0, W
$0052	$00F0			MOVWF	STACK_0
$0053	$30FF			MOVLW	255
$0054	$05F0			ANDWF	STACK_0, 1
$0055	$0871			MOVF	STACK_1, 0
$0056	$0084			MOVWF	FSR
$0057	$0870			MOVF	STACK_0, 0
$0058	$0080			MOVWF	INDF
$0059	$2087			CALL	_Delay_10us
$005A	$0820			MOVF	keypad_16_key_pointer, 0
$005B	$0084			MOVWF	FSR
$005C	$0800			MOVF	INDF, 0
$005D	$00F0			MOVWF	STACK_0
$005E	$300F			MOVLW	15
$005F	$05F0			ANDWF	STACK_0, 1
$0060	$0870			MOVF	STACK_0, 0
$0061	$00A5			MOVWF	Keypad_Read_kdata_L0
$0062	$0870			MOVF	STACK_0, 0
$0063	$1903			BTFSC	STATUS, Z
$0064	$286F			GOTO	L_Keypad_Read_2
$0065	$	L_Keypad_Read_3:
$0065	$0825			MOVF	Keypad_Read_kdata_L0, 0
$0066	$1903			BTFSC	STATUS, Z
$0067	$286C			GOTO	L_Keypad_Read_4
$0068	$0CA5			RRF	Keypad_Read_kdata_L0, 1
$0069	$13A5			BCF	Keypad_Read_kdata_L0, 7
$006A	$0AA4			INCF	Keypad_Read_rslt_L0, 1
$006B	$2865			GOTO	L_Keypad_Read_3
$006C	$	L_Keypad_Read_4:
$006C	$0824			MOVF	Keypad_Read_rslt_L0, 0
$006D	$00F0			MOVWF	STACK_0
$006E	$0008			RETURN
$006F	$	L_Keypad_Read_2:
$006F	$0DA6			RLF	Keypad_Read_shifter_L0, 1
$0070	$1026			BCF	Keypad_Read_shifter_L0, 0
$0071	$3004			MOVLW	4
$0072	$07A4			ADDWF	Keypad_Read_rslt_L0, 1
$0073	$2846			GOTO	L_Keypad_Read_0
$0074	$	L_Keypad_Read_1:
$0074	$01F0			CLRF	STACK_0, 1
$0075	$0008			RETURN
$008E	$	_Keypad_Init:
$008E	$1303			BCF	STATUS, RP1
$008F	$1283			BCF	STATUS, RP0
$0090	$0823			MOVF	FARG_Keypad_Init+0, 0
$0091	$00A0			MOVWF	keypad_16_key_pointer
$0092	$0008			RETURN
$0076	$	_Keypad_Released:
$0076	$2041			CALL	_Keypad_Read
$0077	$0870			MOVF	STACK_0, 0
$0078	$00A3			MOVWF	Keypad_Released_rslt_L0
$0079	$	L_Keypad_Released_5:
$0079	$0820			MOVF	keypad_16_key_pointer, 0
$007A	$0084			MOVWF	FSR
$007B	$0800			MOVF	INDF, 0
$007C	$00F0			MOVWF	STACK_0
$007D	$300F			MOVLW	15
$007E	$05F0			ANDWF	STACK_0, 1
$007F	$0870			MOVF	STACK_0, 0
$0080	$1903			BTFSC	STATUS, Z
$0081	$2884			GOTO	L_Keypad_Released_6
$0082	$0000			NOP
$0083	$2879			GOTO	L_Keypad_Released_5
$0084	$	L_Keypad_Released_6:
$0084	$0823			MOVF	Keypad_Released_rslt_L0, 0
$0085	$00F0			MOVWF	STACK_0
$0086	$0008			RETURN
$0004	$	_main:
;keypad_dcmotor.c,3 :: 		void main()
;keypad_dcmotor.c,5 :: 		kp=0;
$0004	$1303			BCF	STATUS, RP1
$0005	$1283			BCF	STATUS, RP0
$0006	$01A1			CLRF	_kp, 1
;keypad_dcmotor.c,6 :: 		t=0;
$0007	$01A2			CLRF	_t, 1
;keypad_dcmotor.c,7 :: 		keypad_init(&portd);
$0008	$3008			MOVLW	PORTD
$0009	$00A3			MOVWF	FARG_Keypad_Init+0
$000A	$208E			CALL	_Keypad_Init
;keypad_dcmotor.c,8 :: 		trisd=0x00;
$000B	$1683			BSF	STATUS, RP0
$000C	$0188			CLRF	TRISD, 1
;keypad_dcmotor.c,9 :: 		trisb=0x00;
$000D	$0186			CLRF	TRISB, 1
;keypad_dcmotor.c,10 :: 		portb=0x00;
$000E	$1283			BCF	STATUS, RP0
$000F	$0186			CLRF	PORTB, 1
;keypad_dcmotor.c,11 :: 		portd=0x00;
$0010	$0188			CLRF	PORTD, 1
;keypad_dcmotor.c,12 :: 		kp=keypad_read();
$0011	$2041			CALL	_Keypad_Read
$0012	$0870			MOVF	STACK_0, 0
$0013	$00A1			MOVWF	_kp
;keypad_dcmotor.c,13 :: 		while(1)
$0014	$	L_main_0:
;keypad_dcmotor.c,15 :: 		kp=keypad_read();
$0014	$2041			CALL	_Keypad_Read
$0015	$0870			MOVF	STACK_0, 0
$0016	$00A1			MOVWF	_kp
;keypad_dcmotor.c,16 :: 		switch(kp)
$0017	$2833			GOTO	L_main_2
;keypad_dcmotor.c,18 :: 		case 1:do
$0018	$	L_main_4:
$0018	$	L_main_5:
;keypad_dcmotor.c,20 :: 		portb.f2=1;//ENABLE
$0018	$1506			BSF	PORTB, 2
;keypad_dcmotor.c,21 :: 		portb.f1=1;
$0019	$1486			BSF	PORTB, 1
;keypad_dcmotor.c,22 :: 		portb.f0=0;
$001A	$1006			BCF	PORTB, 0
;keypad_dcmotor.c,23 :: 		t=keypad_released();
$001B	$2076			CALL	_Keypad_Released
$001C	$0870			MOVF	STACK_0, 0
$001D	$00A2			MOVWF	_t
;keypad_dcmotor.c,24 :: 		}while(t=0);
$001E	$01A2			CLRF	_t, 1
$001F	$	L_main_6:
;keypad_dcmotor.c,25 :: 		t=0;
$001F	$01A2			CLRF	_t, 1
;keypad_dcmotor.c,26 :: 		break;
$0020	$283F			GOTO	L_main_3
;keypad_dcmotor.c,29 :: 		case 2:do
$0021	$	L_main_7:
$0021	$	L_main_8:
;keypad_dcmotor.c,31 :: 		portb.f2=1;//ENABLE
$0021	$1506			BSF	PORTB, 2
;keypad_dcmotor.c,32 :: 		portb.f1=0;
$0022	$1086			BCF	PORTB, 1
;keypad_dcmotor.c,33 :: 		portb.f0=1;
$0023	$1406			BSF	PORTB, 0
;keypad_dcmotor.c,34 :: 		t=keypad_released();
$0024	$2076			CALL	_Keypad_Released
$0025	$0870			MOVF	STACK_0, 0
$0026	$00A2			MOVWF	_t
;keypad_dcmotor.c,35 :: 		}while(t=0);
$0027	$01A2			CLRF	_t, 1
$0028	$	L_main_9:
;keypad_dcmotor.c,36 :: 		t=0;
$0028	$01A2			CLRF	_t, 1
;keypad_dcmotor.c,37 :: 		break;
$0029	$283F			GOTO	L_main_3
;keypad_dcmotor.c,40 :: 		case 0:do
$002A	$	L_main_10:
$002A	$	L_main_11:
;keypad_dcmotor.c,42 :: 		portb.f2=0;//ENABLE
$002A	$1106			BCF	PORTB, 2
;keypad_dcmotor.c,43 :: 		portb.f1=0;
$002B	$1086			BCF	PORTB, 1
;keypad_dcmotor.c,44 :: 		portb.f0=0;
$002C	$1006			BCF	PORTB, 0
;keypad_dcmotor.c,45 :: 		t=keypad_released();
$002D	$2076			CALL	_Keypad_Released
$002E	$0870			MOVF	STACK_0, 0
$002F	$00A2			MOVWF	_t
;keypad_dcmotor.c,46 :: 		}while(t=0);
$0030	$01A2			CLRF	_t, 1
$0031	$	L_main_12:
;keypad_dcmotor.c,47 :: 		t=0;
$0031	$01A2			CLRF	_t, 1
;keypad_dcmotor.c,48 :: 		break;
$0032	$283F			GOTO	L_main_3
;keypad_dcmotor.c,50 :: 		}
$0033	$	L_main_2:
$0033	$0821			MOVF	_kp, 0
$0034	$3A01			XORLW	1
$0035	$1903			BTFSC	STATUS, Z
$0036	$2818			GOTO	L_main_4
$0037	$0821			MOVF	_kp, 0
$0038	$3A02			XORLW	2
$0039	$1903			BTFSC	STATUS, Z
$003A	$2821			GOTO	L_main_7
$003B	$0821			MOVF	_kp, 0
$003C	$3A00			XORLW	0
$003D	$1903			BTFSC	STATUS, Z
$003E	$282A			GOTO	L_main_10
$003F	$	L_main_3:
;keypad_dcmotor.c,51 :: 		}
$003F	$2814			GOTO	L_main_0
;keypad_dcmotor.c,52 :: 		}
$0040	$2840			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		main
$0041		Keypad_Read
$0076		Keypad_Released
$0087		Delay_10us
$008E		Keypad_Init


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_main:
$0014		L_main_0:
$0018		L_main_4:
$0018		L_main_5:
$001F		L_main_6:
$0021		L_main_7:
$0021		L_main_8:
$0028		L_main_9:
$002A		L_main_10:
$002A		L_main_11:
$0031		L_main_12:
$0033		L_main_2:
$003F		L_main_3:
$0041		_Keypad_Read:
$0046		L_Keypad_Read_0:
$0065		L_Keypad_Read_3:
$006C		L_Keypad_Read_4:
$006F		L_Keypad_Read_2:
$0074		L_Keypad_Read_1:
$0076		_Keypad_Released:
$0079		L_Keypad_Released_5:
$0084		L_Keypad_Released_6:
$0087		_Delay_10us:
$008E		_Keypad_Init:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0006		PORTB
$0008		PORTD
$000A		PCLATH
$0020		keypad_16_key_pointer
$0021		_kp
$0022		_t
$0023		FARG_Keypad_Init+0
$0023		Keypad_Released_rslt_L0
$0024		Keypad_Read_rslt_L0
$0025		Keypad_Read_kdata_L0
$0026		Keypad_Read_shifter_L0
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0086		TRISB
$0088		TRISD


